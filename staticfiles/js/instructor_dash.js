var edx=edx||{};var onCertificatesReady=null;(function($,gettext,_){"use strict";edx.instructor_dashboard=edx.instructor_dashboard||{};edx.instructor_dashboard.certificates={};onCertificatesReady=function(){$("#enable-certificates-form").on("submit",function(event){var isEnabled=$("#certificates-enabled").val()==="true",confirmMessage="";if(isEnabled){confirmMessage=gettext("Allow students to generate certificates for this course?")}else{confirmMessage=gettext("Prevent students from generating certificates in this course?")}if(!confirm(confirmMessage)){event.preventDefault()}});$("#refresh-example-certificate-status").on("click",function(){window.location.reload()});var $section=$("section#certificates");$section.on("click","#btn-start-generating-certificates",function(event){if(!confirm(gettext("Start generating certificates for all students in this course?"))){event.preventDefault();return}var $btn_generating_certs=$(this),$certificate_generation_status=$(".certificate-generation-status");var url=$btn_generating_certs.data("endpoint");$.ajax({type:"POST",url:url,success:function(data){$btn_generating_certs.attr("disabled","disabled");$certificate_generation_status.text(data.message)},error:function(jqXHR,textStatus,errorThrown){$certificate_generation_status.text(gettext("Error while generating certificates. Please try again."))}})});$section.on("click","#btn-start-regenerating-certificates",function(event){if(!confirm(gettext("Start regenerating certificates for students in this course?"))){event.preventDefault();return}var $btn_regenerating_certs=$(this),$certificate_regeneration_status=$(".certificate-regeneration-status"),url=$btn_regenerating_certs.data("endpoint");$.ajax({type:"POST",data:$("#certificate-regenerating-form").serializeArray(),url:url,success:function(data){$btn_regenerating_certs.attr("disabled","disabled");if(data.success){$certificate_regeneration_status.text(data.message).addClass("message")}else{$certificate_regeneration_status.text(data.message).addClass("message")}},error:function(jqXHR){try{var response=JSON.parse(jqXHR.responseText);$certificate_regeneration_status.text(gettext(response.message)).addClass("message")}catch(error){$certificate_regeneration_status.text(gettext("Error while regenerating certificates. Please try again.")).addClass("message")}}})})};$(onCertificatesReady);var Certificates=function(){function Certificates($section){$section.data("wrapper",this);this.instructor_tasks=new window.InstructorDashboard.util.PendingInstructorTasks($section)}Certificates.prototype.onClickTitle=function(){return this.instructor_tasks.task_poller.start()};Certificates.prototype.onExit=function(){return this.instructor_tasks.task_poller.stop()};return Certificates}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{Certificates:Certificates})})($,gettext,_);(function(){var CohortManagement;CohortManagement=function(){function CohortManagement($section){this.$section=$section;this.$section.data("wrapper",this)}CohortManagement.prototype.onClickTitle=function(){};return CohortManagement}();window.InstructorDashboard.sections.CohortManagement=CohortManagement}).call(this);(function(){"use strict";var InstructorDashboardCourseInfo,PendingInstructorTasks;PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};InstructorDashboardCourseInfo=function(){function CourseInfo($section){var courseInfo=this;this.$section=$section;this.$section.data("wrapper",this);this.instructor_tasks=new(PendingInstructorTasks())(this.$section);this.$course_errors_wrapper=this.$section.find(".course-errors-wrapper");if(this.$course_errors_wrapper.length){this.$course_error_toggle=this.$course_errors_wrapper.find(".toggle-wrapper");this.$course_error_toggle_text=this.$course_error_toggle.find("h2");this.$course_errors=this.$course_errors_wrapper.find(".course-error");this.$course_error_toggle_text.text(this.$course_error_toggle_text.text()+" (' + this.$course_errors.length + ')");this.$course_error_toggle.click(function(e){e.preventDefault();if(courseInfo.$course_errors_wrapper.hasClass("open")){return courseInfo.$course_errors_wrapper.removeClass("open")}else{return courseInfo.$course_errors_wrapper.addClass("open")}})}}CourseInfo.prototype.onClickTitle=function(){return this.instructor_tasks.task_poller.start()};CourseInfo.prototype.onExit=function(){return this.instructor_tasks.task_poller.stop()};return CourseInfo}();window.InstructorDashboard.sections.CourseInfo=InstructorDashboardCourseInfo}).call(this);(function(){"use strict";var DataDownload,DataDownloadCertificate,PendingInstructorTasks,ReportDownloads,statusAjaxError;statusAjaxError=function(){return window.InstructorDashboard.util.statusAjaxError.apply(this,arguments)};PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};ReportDownloads=function(){return window.InstructorDashboard.util.ReportDownloads};DataDownloadCertificate=function(){function InstructorDashboardDataDownloadCertificate($container){var dataDownloadCert=this;this.$container=$container;this.$list_issued_certificate_table_btn=this.$container.find("input[name='issued-certificates-list']");this.$list_issued_certificate_csv_btn=this.$container.find("input[name='issued-certificates-csv']");this.$certificate_display_table=this.$container.find(".certificate-data-display-table");this.$certificates_request_err=this.$container.find(".issued-certificates-error.request-response-error");this.$list_issued_certificate_table_btn.click(function(){var url=dataDownloadCert.$list_issued_certificate_table_btn.data("endpoint");dataDownloadCert.clear_ui();dataDownloadCert.$certificate_display_table.text(gettext("Loading data..."));return $.ajax({type:"POST",url:url,error:function(){dataDownloadCert.clear_ui();dataDownloadCert.$certificates_request_err.text(gettext("Error getting issued certificates list."));return $(".issued_certificates .issued-certificates-error.msg-error").css({display:"block"})},success:function(data){var $tablePlaceholder,columns,feature,gridData,options;dataDownloadCert.clear_ui();options={enableCellNavigation:true,enableColumnReorder:false,forceFitColumns:true,rowHeight:35};columns=function(){var i,len,ref,results;ref=data.queried_features;results=[];for(i=0,len=ref.length;i<len;i++){feature=ref[i];results.push({id:feature,field:feature,name:data.feature_names[feature]})}return results}();gridData=data.certificates;$tablePlaceholder=$("<div/>",{class:"slickgrid"});dataDownloadCert.$certificate_display_table.append($tablePlaceholder);return new window.Slick.Grid($tablePlaceholder,gridData,columns,options)}})});this.$list_issued_certificate_csv_btn.click(function(){dataDownloadCert.clear_ui();location.href=dataDownloadCert.$list_issued_certificate_csv_btn.data("endpoint")+"?csv=true"})}InstructorDashboardDataDownloadCertificate.prototype.clear_ui=function(){this.$certificate_display_table.empty();this.$certificates_request_err.empty();return $(".issued-certificates-error.msg-error").css({display:"none"})};return InstructorDashboardDataDownloadCertificate}();DataDownload=function(){function InstructorDashboardDataDownload($section){var dataDownloadObj=this;this.$section=$section;this.$section.data("wrapper",this);this.ddc=new DataDownloadCertificate(this.$section.find(".issued_certificates"));this.$list_studs_btn=this.$section.find("input[name='list-profiles']");this.$list_studs_csv_btn=this.$section.find("input[name='list-profiles-csv']");this.$proctored_exam_csv_btn=this.$section.find("input[name='proctored-exam-results-report']");this.$survey_results_csv_btn=this.$section.find("input[name='survey-results-report']");this.$list_may_enroll_csv_btn=this.$section.find("input[name='list-may-enroll-csv']");this.$list_problem_responses_csv_input=this.$section.find("input[name='problem-location']");this.$list_problem_responses_csv_btn=this.$section.find("input[name='list-problem-responses-csv']");this.$list_anon_btn=this.$section.find("input[name='list-anon-ids']");this.$grade_config_btn=this.$section.find("input[name='dump-gradeconf']");this.$calculate_grades_csv_btn=this.$section.find("input[name='calculate-grades-csv']");this.$problem_grade_report_csv_btn=this.$section.find("input[name='problem-grade-report']");this.$async_report_btn=this.$section.find("input[class='async-report-btn']");this.$download=this.$section.find(".data-download-container");this.$download_display_text=this.$download.find(".data-display-text");this.$download_request_response_error=this.$download.find(".request-response-error");this.$reports=this.$section.find(".reports-download-container");this.$download_display_table=this.$reports.find(".profile-data-display-table");this.$reports_request_response=this.$reports.find(".request-response");this.$reports_request_response_error=this.$reports.find(".request-response-error");this.report_downloads=new(ReportDownloads())(this.$section);this.instructor_tasks=new(PendingInstructorTasks())(this.$section);this.clear_display();this.$list_anon_btn.click(function(){location.href=dataDownloadObj.$list_anon_btn.data("endpoint")});this.$proctored_exam_csv_btn.click(function(){var url=dataDownloadObj.$proctored_exam_csv_btn.data("endpoint");var errorMessage=gettext("Error generating proctored exam results. Please try again.");return $.ajax({type:"POST",dataType:"json",url:url,error:function(error){if(error.responseText){errorMessage=JSON.parse(error.responseText)}dataDownloadObj.clear_display();dataDownloadObj.$reports_request_response_error.text(errorMessage);return dataDownloadObj.$reports_request_response_error.css({display:"block"})},success:function(data){dataDownloadObj.clear_display();dataDownloadObj.$reports_request_response.text(data.status);return $(".msg-confirm").css({display:"block"})}})});this.$survey_results_csv_btn.click(function(){var url=dataDownloadObj.$survey_results_csv_btn.data("endpoint");var errorMessage=gettext("Error generating survey results. Please try again.");return $.ajax({type:"POST",dataType:"json",url:url,error:function(error){if(error.responseText){errorMessage=JSON.parse(error.responseText)}dataDownloadObj.clear_display();dataDownloadObj.$reports_request_response_error.text(errorMessage);return dataDownloadObj.$reports_request_response_error.css({display:"block"})},success:function(data){dataDownloadObj.clear_display();dataDownloadObj.$reports_request_response.text(data.status);return $(".msg-confirm").css({display:"block"})}})});this.$list_studs_csv_btn.click(function(){var url=dataDownloadObj.$list_studs_csv_btn.data("endpoint")+"/csv";var errorMessage=gettext("Error generating student profile information. Please try again.");dataDownloadObj.clear_display();return $.ajax({type:"POST",dataType:"json",url:url,error:function(error){if(error.responseText){errorMessage=JSON.parse(error.responseText)}dataDownloadObj.$reports_request_response_error.text(errorMessage);return dataDownloadObj.$reports_request_response_error.css({display:"block"})},success:function(data){dataDownloadObj.$reports_request_response.text(data.status);return $(".msg-confirm").css({display:"block"})}})});this.$list_studs_btn.click(function(){var url=dataDownloadObj.$list_studs_btn.data("endpoint");dataDownloadObj.clear_display();dataDownloadObj.$download_display_table.text(gettext("Loading"));return $.ajax({type:"POST",dataType:"json",url:url,error:function(){dataDownloadObj.clear_display();dataDownloadObj.$download_request_response_error.text(gettext("Error getting student list."));return dataDownloadObj.$download_request_response_error.css({display:"block"})},success:function(data){var $tablePlaceholder,columns,feature,gridData,options;dataDownloadObj.clear_display();options={enableCellNavigation:true,enableColumnReorder:false,forceFitColumns:true,rowHeight:35};columns=function(){var i,len,ref,results;ref=data.queried_features;results=[];for(i=0,len=ref.length;i<len;i++){feature=ref[i];results.push({id:feature,field:feature,name:data.feature_names[feature]})}return results}();gridData=data.students;$tablePlaceholder=$("<div/>",{class:"slickgrid"});dataDownloadObj.$download_display_table.append($tablePlaceholder);return new window.Slick.Grid($tablePlaceholder,gridData,columns,options)}})});this.$list_problem_responses_csv_btn.click(function(){var url=dataDownloadObj.$list_problem_responses_csv_btn.data("endpoint");dataDownloadObj.clear_display();return $.ajax({type:"POST",dataType:"json",url:url,data:{problem_location:dataDownloadObj.$list_problem_responses_csv_input.val()},error:function(error){dataDownloadObj.$reports_request_response_error.text(JSON.parse(error.responseText));return dataDownloadObj.$reports_request_response_error.css({display:"block"})},success:function(data){dataDownloadObj.$reports_request_response.text(data.status);return $(".msg-confirm").css({display:"block"})}})});this.$list_may_enroll_csv_btn.click(function(){var url=dataDownloadObj.$list_may_enroll_csv_btn.data("endpoint");var errorMessage=gettext("Error generating list of students who may enroll. Please try again.");dataDownloadObj.clear_display();return $.ajax({type:"POST",dataType:"json",url:url,error:function(error){if(error.responseText){errorMessage=JSON.parse(error.responseText)}dataDownloadObj.$reports_request_response_error.text(errorMessage);return dataDownloadObj.$reports_request_response_error.css({display:"block"})},success:function(data){dataDownloadObj.$reports_request_response.text(data.status);return $(".msg-confirm").css({display:"block"})}})});this.$grade_config_btn.click(function(){var url=dataDownloadObj.$grade_config_btn.data("endpoint");return $.ajax({type:"POST",dataType:"json",url:url,error:function(){dataDownloadObj.clear_display();dataDownloadObj.$download_request_response_error.text(gettext("Error retrieving grading configuration."));return dataDownloadObj.$download_request_response_error.css({display:"block"})},success:function(data){dataDownloadObj.clear_display();return edx.HtmlUtils.setHtml(dataDownloadObj.$download_display_text,edx.HtmlUtils.HTML(data.grading_config_summary))}})});this.$async_report_btn.click(function(e){var url=$(e.target).data("endpoint");var errorMessage="";dataDownloadObj.clear_display();return $.ajax({type:"POST",dataType:"json",url:url,error:function(error){if(error.responseText){errorMessage=JSON.parse(error.responseText)}else if(e.target.name==="calculate-grades-csv"){errorMessage=gettext("Error generating grades. Please try again.")}else if(e.target.name==="problem-grade-report"){errorMessage=gettext("Error generating problem grade report. Please try again.")}else if(e.target.name==="export-ora2-data"){errorMessage=gettext("Error generating ORA data report. Please try again.")}dataDownloadObj.$reports_request_response_error.text(errorMessage);return dataDownloadObj.$reports_request_response_error.css({display:"block"})},success:function(data){dataDownloadObj.$reports_request_response.text(data.status);return $(".msg-confirm").css({display:"block"})}})})}InstructorDashboardDataDownload.prototype.onClickTitle=function(){this.clear_display();this.instructor_tasks.task_poller.start();return this.report_downloads.downloads_poller.start()};InstructorDashboardDataDownload.prototype.onExit=function(){this.instructor_tasks.task_poller.stop();return this.report_downloads.downloads_poller.stop()};InstructorDashboardDataDownload.prototype.clear_display=function(){this.$download_display_text.empty();this.$download_display_table.empty();this.$download_request_response_error.empty();this.$reports_request_response.empty();this.$reports_request_response_error.empty();$(".msg-confirm").css({display:"none"});return $(".msg-error").css({display:"none"})};return InstructorDashboardDataDownload}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{DataDownload:DataDownload})}).call(this);(function(){"use strict";function DiscussionsManagement($section){this.$section=$section;this.$section.data("wrapper",this)}DiscussionsManagement.prototype.onClickTitle=function(){};window.InstructorDashboard.sections.DiscussionsManagement=DiscussionsManagement}).call(this);(function(){"use strict";var ECommerce,PendingInstructorTasks,ReportDownloads;PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};ReportDownloads=function(){return window.InstructorDashboard.util.ReportDownloads};ECommerce=function(){function eCommerce($section){var eCom=this;this.$section=$section;this.$section.data("wrapper",this);this.$list_sale_csv_btn=this.$section.find("input[name='list-sale-csv']");this.$list_order_sale_csv_btn=this.$section.find("input[name='list-order-sale-csv']");this.$download_company_name=this.$section.find("input[name='download_company_name']");this.$active_company_name=this.$section.find("input[name='active_company_name']");this.$spent_company_name=this.$section.find('input[name="spent_company_name"]');this.$download_coupon_codes=this.$section.find('input[name="download-coupon-codes-csv"]');this.$download_registration_codes_form=this.$section.find("form#download_registration_codes");this.$active_registration_codes_form=this.$section.find("form#active_registration_codes");this.$spent_registration_codes_form=this.$section.find("form#spent_registration_codes");this.$reports=this.$section.find(".reports-download-container");this.$reports_request_response=this.$reports.find(".request-response");this.$reports_request_response_error=this.$reports.find(".request-response-error");this.report_downloads=new(ReportDownloads())(this.$section);this.instructor_tasks=new(PendingInstructorTasks())(this.$section);this.$error_msg=this.$section.find("#error-msg");this.$list_sale_csv_btn.click(function(){location.href=eCom.$list_sale_csv_btn.data("endpoint")+"/csv";return location.href});this.$list_order_sale_csv_btn.click(function(){location.href=eCom.$list_order_sale_csv_btn.data("endpoint");return location.href});this.$download_coupon_codes.click(function(){location.href=eCom.$download_coupon_codes.data("endpoint");return location.href});this.$download_registration_codes_form.submit(function(){eCom.$error_msg.attr("style","display: none");return true});this.$active_registration_codes_form.submit(function(){eCom.$error_msg.attr("style","display: none");return true});this.$spent_registration_codes_form.submit(function(){eCom.$error_msg.attr("style","display: none");return true})}eCommerce.prototype.onClickTitle=function(){this.clear_display();this.instructor_tasks.task_poller.start();return this.report_downloads.downloads_poller.start()};eCommerce.prototype.onExit=function(){this.clear_display();this.instructor_tasks.task_poller.stop();return this.report_downloads.downloads_poller.stop()};eCommerce.prototype.clear_display=function(){this.$error_msg.attr("style","display: none");this.$download_company_name.val("");this.$reports_request_response.empty();this.$reports_request_response_error.empty();this.$active_company_name.val("");return this.$spent_company_name.val("")};return eCommerce}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{ECommerce:ECommerce})}).call(this);var edx=edx||{};(function(Backbone,$,_,gettext){"use strict";edx.instructor_dashboard=edx.instructor_dashboard||{};edx.instructor_dashboard.ecommerce={};edx.instructor_dashboard.ecommerce.ExpiryCouponView=Backbone.View.extend({el:"li#add-coupon-modal-field-expiry",events:{'click input[type="checkbox"]':"clicked"},initialize:function(){$('li#add-coupon-modal-field-expiry input[name="expiration_date"]').hide();_.bindAll(this,"clicked")},clicked:function(event){if(event.currentTarget.checked){this.show(this.$("#coupon_expiration_date"));this.$el.find("#coupon_expiration_date").focus()}else{this.hide(this.$("#coupon_expiration_date"))}},show:function($el){$el.css("display","inline")},hide:function($el){$el.css("display","none")}});$(function(){var $registration_code_status_form=$("form#set_regcode_status_form"),$lookup_button=$("#lookup_regcode",$registration_code_status_form),$registration_code_status_form_error=$("#regcode_status_form_error",$registration_code_status_form),$registration_code_status_form_success=$("#regcode_status_form_success",$registration_code_status_form);$("#coupon_expiration_date").datepicker({minDate:0});var view=new edx.instructor_dashboard.ecommerce.ExpiryCouponView;$('input[name="user-enrollment-report"]').click(function(){var url=$(this).data("endpoint");$.ajax({type:"POST",dataType:"json",url:url,success:function(data){$("#enrollment-report-request-response").text(data.status);return $("#enrollment-report-request-response").css({display:"block"})},error:function(std_ajax_err){$("#enrollment-report-request-response-error").text(gettext('There was a problem creating the report. Select "Create Executive Summary" to try again.'));return $("#enrollment-report-request-response-error").css({display:"block"})}})});$('input[name="exec-summary-report"]').click(function(){var url=$(this).data("endpoint");$.ajax({type:"POST",dataType:"json",url:url,success:function(data){$("#exec-summary-report-request-response").text(data.status);return $("#exec-summary-report-request-response").css({display:"block"})},error:function(std_ajax_err){$("#exec-summary-report-request-response-error").text(gettext('There was a problem creating the report. Select "Create Executive Summary" to try again.'));return $("#exec-summary-report-request-response-error").css({display:"block"})}})});$lookup_button.click(function(){$registration_code_status_form_error.hide();$lookup_button.attr("disabled",true);var url=$(this).data("endpoint");var lookup_registration_code=$('#set_regcode_status_form input[name="regcode_code"]').val();if(lookup_registration_code==""){$registration_code_status_form_error.show();$registration_code_status_form_error.text(gettext("Enter the enrollment code."));$lookup_button.removeAttr("disabled");return false}$.ajax({type:"GET",data:{registration_code:lookup_registration_code},url:url,success:function(data){var is_registration_code_valid=data.is_registration_code_valid,is_registration_code_redeemed=data.is_registration_code_redeemed,is_registration_code_exists=data.is_registration_code_exists;$lookup_button.removeAttr("disabled");if(is_registration_code_exists=="false"){$registration_code_status_form_error.hide();$registration_code_status_form_error.show();$registration_code_status_form_error.text(gettext(data.message))}else{var actions_links="";var actions=[];if(is_registration_code_valid==true){actions.push({action_url:data.registration_code_detail_url,action_name:gettext("Cancel enrollment code"),registration_code:lookup_registration_code,action_type:"invalidate_registration_code"})}else{actions.push({action_url:data.registration_code_detail_url,action_name:gettext("Restore enrollment code"),registration_code:lookup_registration_code,action_type:"validate_registration_code"})}if(is_registration_code_redeemed==true){actions.push({action_url:data.registration_code_detail_url,action_name:gettext("Mark enrollment code as unused"),registration_code:lookup_registration_code,action_type:"unredeem_registration_code"})}is_registration_code_redeemed=is_registration_code_redeemed?"Yes":"No";is_registration_code_valid=is_registration_code_valid?"Yes":"No";var template_data=_.template($("#enrollment-code-lookup-links-tpl").text());var registration_code_lookup_actions=template_data({lookup_registration_code:lookup_registration_code,is_registration_code_redeemed:is_registration_code_redeemed,is_registration_code_valid:is_registration_code_valid,actions:actions});$registration_code_status_form.next().remove();$(registration_code_lookup_actions).insertAfter($registration_code_status_form)}},error:function(jqXHR,textStatus,errorThrown){var data=$.parseJSON(jqXHR.responseText);$lookup_button.removeAttr("disabled");$registration_code_status_form_error.text(gettext(data.message));$registration_code_status_form_error.show()}})});$("section#invalidate_registration_code_modal").on("click","a.registration_code_action_link",function(event){event.preventDefault();$registration_code_status_form_error.attr("style","display: none");$lookup_button.attr("disabled",true);var url=$(this).data("endpoint");var action_type=$(this).data("action-type");var registration_code=$(this).data("registration-code");$.ajax({type:"POST",data:{registration_code:registration_code,action_type:action_type},url:url,success:function(data){$('#set_regcode_status_form input[name="regcode_code"]').val("");$registration_code_status_form.next().remove();$registration_code_status_form_error.hide();$lookup_button.removeAttr("disabled");$registration_code_status_form_success.text(gettext(data.message));$registration_code_status_form_success.show();$registration_code_status_form_success.fadeOut(3e3)},error:function(jqXHR,textStatus,errorThrown){var data=$.parseJSON(jqXHR.responseText);$registration_code_status_form_error.hide();$lookup_button.removeAttr("disabled");$registration_code_status_form_error.show();$registration_code_status_form_error.text(gettext(data.message))}})})})})(Backbone,$,_,gettext);(function(){"use strict";var Extensions;Extensions=function(){function extensions($section){var $gridDisplay,ext=this;this.$section=$section;this.$section.data("wrapper",this);this.$change_due_date=this.$section.find("input[name='change-due-date']");this.$reset_due_date=this.$section.find("input[name='reset-due-date']");this.$show_unit_ext=this.$section.find("input[name='show-unit-extensions']");this.$show_student_ext=this.$section.find("input[name='show-student-extensions']");this.$section.find(".request-response").hide();this.$section.find(".request-response-error").hide();$gridDisplay=this.$section.find(".data-display");this.$grid_text=$gridDisplay.find(".data-display-text");this.$grid_table=$gridDisplay.find(".data-display-table");this.$change_due_date.click(function(){var sendData;ext.clear_display();ext.$student_input=ext.$section.find("#set-extension input[name='student']");ext.$url_input=ext.$section.find("#set-extension select[name='url']");ext.$due_datetime_input=ext.$section.find("#set-extension input[name='due_datetime']");sendData={student:ext.$student_input.val(),url:ext.$url_input.val(),due_datetime:ext.$due_datetime_input.val()};return $.ajax({type:"POST",dataType:"json",url:ext.$change_due_date.data("endpoint"),data:sendData,success:function(data){return ext.display_response("set-extension",data)},error:function(xhr){return ext.fail_with_error("set-extension","Error changing due date",xhr)}})});this.$reset_due_date.click(function(){var sendData;ext.clear_display();ext.$student_input=ext.$section.find("#reset-extension input[name='student']");ext.$url_input=ext.$section.find("#reset-extension select[name='url']");sendData={student:ext.$student_input.val(),url:ext.$url_input.val()};return $.ajax({type:"POST",dataType:"json",url:ext.$reset_due_date.data("endpoint"),data:sendData,success:function(data){return ext.display_response("reset-extension",data)},error:function(xhr){return ext.fail_with_error("reset-extension","Error reseting due date",xhr)}})});this.$show_unit_ext.click(function(){var sendData,url;ext.clear_display();ext.$grid_table.text("Loading");ext.$url_input=ext.$section.find("#view-granted-extensions select[name='url']");url=ext.$show_unit_ext.data("endpoint");sendData={url:ext.$url_input.val()};return $.ajax({type:"POST",dataType:"json",url:url,data:sendData,error:function(xhr){return ext.fail_with_error("view-granted-extensions","Error getting due dates",xhr)},success:function(data){return ext.display_grid(data)}})});this.$show_student_ext.click(function(){var sendData,url;ext.clear_display();ext.$grid_table.text("Loading");url=ext.$show_student_ext.data("endpoint");ext.$student_input=ext.$section.find("#view-granted-extensions input[name='student']");sendData={student:ext.$student_input.val()};return $.ajax({type:"POST",dataType:"json",url:url,data:sendData,error:function(xhr){return ext.fail_with_error("view-granted-extensions","Error getting due dates",xhr)},success:function(data){return ext.display_grid(data)}})})}extensions.prototype.onClickTitle=function(){};extensions.prototype.fail_with_error=function(id,msg,xhr){var $taskError,$taskResponse,data,message=msg;$taskError=this.$section.find("#"+id+" .request-response-error");$taskResponse=this.$section.find("#"+id+" .request-response");this.clear_display();data=$.parseJSON(xhr.responseText);message+=": "+data.error;$taskResponse.empty();$taskError.empty();$taskError.text(message);return $taskError.show()};extensions.prototype.display_response=function(id,data){var $taskError,$taskResponse;$taskError=this.$section.find("#"+id+" .request-response-error");$taskResponse=this.$section.find("#"+id+" .request-response");$taskError.empty().hide();$taskResponse.empty().text(data);return $taskResponse.show()};extensions.prototype.display_grid=function(data){var $tablePlaceholder,col,columns,gridData,options;this.clear_display();this.$grid_text.text(data.title);options={enableCellNavigation:true,enableColumnReorder:false,forceFitColumns:true};columns=function(){var i,len,ref,results;ref=data.header;results=[];for(i=0,len=ref.length;i<len;i++){col=ref[i];results.push({id:col,field:col,name:col})}return results}();gridData=data.data;$tablePlaceholder=$("<div/>",{class:"slickgrid",style:"min-height: 400px"});this.$grid_table.append($tablePlaceholder);return new window.Slick.Grid($tablePlaceholder,gridData,columns,options)};extensions.prototype.clear_display=function(){this.$grid_text.empty();this.$grid_table.empty();this.$section.find(".request-response-error").empty().hide();return this.$section.find(".request-response").empty().hide()};return extensions}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{Extensions:Extensions})}).call(this);(function(){"use strict";var $activeSection,CSS_ACTIVE_SECTION,CSS_IDASH_SECTION,CSS_INSTRUCTOR_CONTENT,CSS_INSTRUCTOR_NAV,HASH_LINK_PREFIX,SafeWaiter,plantTimeout,sectionsHaveLoaded,setupInstructorDashboard,setupInstructorDashboardSections;plantTimeout=function(){return window.InstructorDashboard.util.plantTimeout.apply(this,arguments)};CSS_INSTRUCTOR_CONTENT="instructor-dashboard-content-2";CSS_ACTIVE_SECTION="active-section";CSS_IDASH_SECTION="idash-section";CSS_INSTRUCTOR_NAV="instructor-nav";HASH_LINK_PREFIX="#view-";$activeSection=null;SafeWaiter=function(){function safeWaiter(){this.after_handlers=[];this.waitFor_handlers=[];this.fired=false}safeWaiter.prototype.afterFor=function(f){if(this.fired){return f()}else{return this.after_handlers.push(f)}};safeWaiter.prototype.waitFor=function(f){var safeWait=this;if(!this.fired){this.waitFor_handlers.push(f);return function(){safeWait.waitFor_handlers=safeWait.waitFor_handlers.filter(function(g){return g!==f});if(safeWait.waitFor_handlers.length===0){safeWait.fired=true;safeWait.after_handlers.map(function(cb){return plantTimeout(0,cb)})}return f.apply(safeWait,arguments)}}else{return false}};return safeWaiter}();sectionsHaveLoaded=new SafeWaiter;$(function(){var $instructorDashboardContent;$instructorDashboardContent=$("."+CSS_INSTRUCTOR_CONTENT);if($instructorDashboardContent.length>0){setupInstructorDashboard($instructorDashboardContent);return setupInstructorDashboardSections($instructorDashboardContent)}return setupInstructorDashboardSections($instructorDashboardContent)});setupInstructorDashboard=function(idashContent){var $links,clickFirstLink,link,rmatch,sectionName;$links=idashContent.find("."+CSS_INSTRUCTOR_NAV).find(".btn-link");$links.each(function(i,linkItem){return $(linkItem).click(function(e){var $section,itemSectionName,ref;e.preventDefault();idashContent.find("."+CSS_INSTRUCTOR_NAV+" li").children().removeClass(CSS_ACTIVE_SECTION);
idashContent.find("."+CSS_INSTRUCTOR_NAV+" li").children().attr("aria-pressed","false");idashContent.find("."+CSS_IDASH_SECTION).removeClass(CSS_ACTIVE_SECTION);itemSectionName=$(this).data("section");$section=idashContent.find("#"+itemSectionName);$(this).addClass(CSS_ACTIVE_SECTION);$(this).attr("aria-pressed","true");$section.addClass(CSS_ACTIVE_SECTION);window.analytics.pageview("instructor_section:"+itemSectionName);location.hash=""+HASH_LINK_PREFIX+itemSectionName;sectionsHaveLoaded.afterFor(function(){return $section.data("wrapper").onClickTitle()});if(!$section.is($activeSection)){if($activeSection!=null){ref=$activeSection.data("wrapper")!=null;if(ref){if(typeof ref.onExit==="function"){ref.onExit()}}}}$activeSection=$section;return $activeSection})});clickFirstLink=function(){var firstLink;firstLink=$links.eq(0);return firstLink.click()};if(new RegExp("^"+HASH_LINK_PREFIX).test(location.hash)){rmatch=new RegExp("^"+HASH_LINK_PREFIX+"(.*)").exec(location.hash);sectionName=rmatch[1];link=$links.filter("[data-section='"+sectionName+"']");if(link.length===1){return link.click()}else{return clickFirstLink()}}else{return clickFirstLink()}};setupInstructorDashboardSections=function(idashContent){var sectionsToInitialize;sectionsToInitialize=[{constructor:window.InstructorDashboard.sections.CourseInfo,$element:idashContent.find("."+CSS_IDASH_SECTION+"#course_info")},{constructor:window.InstructorDashboard.sections.DataDownload,$element:idashContent.find("."+CSS_IDASH_SECTION+"#data_download")},{constructor:window.InstructorDashboard.sections.ECommerce,$element:idashContent.find("."+CSS_IDASH_SECTION+"#e-commerce")},{constructor:window.InstructorDashboard.sections.Membership,$element:idashContent.find("."+CSS_IDASH_SECTION+"#membership")},{constructor:window.InstructorDashboard.sections.StudentAdmin,$element:idashContent.find("."+CSS_IDASH_SECTION+"#student_admin")},{constructor:window.InstructorDashboard.sections.Extensions,$element:idashContent.find("."+CSS_IDASH_SECTION+"#extensions")},{constructor:window.InstructorDashboard.sections.Email,$element:idashContent.find("."+CSS_IDASH_SECTION+"#send_email")},{constructor:window.InstructorDashboard.sections.InstructorAnalytics,$element:idashContent.find("."+CSS_IDASH_SECTION+"#instructor_analytics")},{constructor:window.InstructorDashboard.sections.Metrics,$element:idashContent.find("."+CSS_IDASH_SECTION+"#metrics")},{constructor:window.InstructorDashboard.sections.CohortManagement,$element:idashContent.find("."+CSS_IDASH_SECTION+"#cohort_management")},{constructor:window.InstructorDashboard.sections.DiscussionsManagement,$element:idashContent.find("."+CSS_IDASH_SECTION+"#discussions_management")},{constructor:window.InstructorDashboard.sections.Certificates,$element:idashContent.find("."+CSS_IDASH_SECTION+"#certificates")},{constructor:window.InstructorDashboard.sections.OpenResponseAssessment,$element:idashContent.find("."+CSS_IDASH_SECTION+"#open_response_assessment")}];if(edx.instructor_dashboard.proctoring!==void 0){sectionsToInitialize=sectionsToInitialize.concat([{constructor:edx.instructor_dashboard.proctoring.ProctoredExamAllowanceView,$element:idashContent.find("."+CSS_IDASH_SECTION+"#special_exams")},{constructor:edx.instructor_dashboard.proctoring.ProctoredExamAttemptView,$element:idashContent.find("."+CSS_IDASH_SECTION+"#special_exams")},{constructor:edx.instructor_dashboard.proctoring.ProctoredExamDashboardView,$element:idashContent.find("."+CSS_IDASH_SECTION+"#special_exams")}])}return sectionsToInitialize.map(function(_arg){var $element,constructor;constructor=_arg.constructor;$element=_arg.$element;return plantTimeout(0,sectionsHaveLoaded.waitFor(function(){return new constructor($element)}))})}}).call(this);(function(){"use strict";var AuthListWidget,Membership,BatchEnrollment,BetaTesterBulkAddition,MemberListWidget,emailStudents,plantTimeout,statusAjaxError,enableAddButton,__hasProp={}.hasOwnProperty,__extends=function(child,parent){for(var key in parent){if(__hasProp.call(parent,key))child[key]=parent[key]}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor;child.__super__=parent.prototype;return child};plantTimeout=function(){return window.InstructorDashboard.util.plantTimeout.apply(this,arguments)};statusAjaxError=function(){return window.InstructorDashboard.util.statusAjaxError.apply(this,arguments)};enableAddButton=function(enable,parent){var $addButton=parent.$('input[type="button"].add');var $addField=parent.$('input[type="text"].add-field');if(enable){$addButton.removeAttr("disabled");$addField.removeAttr("disabled")}else{$addButton.attr("disabled",true);$addField.attr("disabled",true)}};emailStudents=false;MemberListWidget=function(){function memberListWidget($container,params){var templateHtml,condition,memberListParams=params||{},memberlistwidget=this;this.$container=$container;memberListParams=_.defaults(memberListParams,{title:"Member List",info:"Use this list to manage members.",labels:["field1","field2","field3"],add_placeholder:"Enter name",add_btn_label:"Add Member",add_handler:function(){}});templateHtml=edx.HtmlUtils.template($("#membership-list-widget-tpl").text())(memberListParams);edx.HtmlUtils.setHtml(this.$container,templateHtml);this.$('input[type="button"].add').click(function(){condition=typeof memberListParams.add_handler==="function";return condition?memberListParams.add_handler(memberlistwidget.$(".add-field").val()):undefined})}memberListWidget.prototype.clear_input=function(){return this.$(".add-field").val("")};memberListWidget.prototype.clear_rows=function(){return this.$("table tbody").empty()};memberListWidget.prototype.add_row=function(rowArray){var $tbody,$td,$tr,item,i,len;$tbody=this.$("table tbody");$tr=$("<tr>");for(i=0,len=rowArray.length;i<len;i++){item=rowArray[i];$td=$("<td>");if(item instanceof jQuery){edx.HtmlUtils.append($td,edx.HtmlUtils.HTML(item))}else{$td.text(item)}$tr.append($td)}return $tbody.append($tr)};memberListWidget.prototype.$=function(selector){var s;if(this.debug!=null){s=this.$container.find(selector);return s}else{return this.$container.find(selector)}};return memberListWidget}();AuthListWidget=function(_super){__extends(AuthListWidget,_super);function AuthListWidget($container,rolename,$errorSection){var msg,authListWidget=this,labelsList=[gettext("Username"),gettext("Email"),gettext("Revoke access")];this.rolename=rolename;this.$errorSection=$errorSection;this.list_enabled=true;if(this.rolename==="Group Moderator"){labelsList=[gettext("Username"),gettext("Email"),gettext("Group"),gettext("Revoke access")]}AuthListWidget.__super__.constructor.call(this,$container,{title:$container.data("display-name"),info:$container.data("info-text"),labels:labelsList,add_placeholder:gettext("Enter username or email"),add_btn_label:$container.data("add-button-label"),add_handler:function(input){return authListWidget.add_handler(input)}});this.debug=true;this.list_endpoint=$container.data("list-endpoint");this.modify_endpoint=$container.data("modify-endpoint");if(this.rolename==null){msg="AuthListWidget missing @rolename";throw msg}this.reload_list()}AuthListWidget.prototype.re_view=function(){this.clear_errors();this.clear_input();return this.reload_list()};AuthListWidget.prototype.add_handler=function(input){var authListWidgetAddHandler=this;if(input!=null&&input!==""){return this.modify_member_access(input,"allow",function(error){if(error!==null){return authListWidgetAddHandler.show_errors(error)}authListWidgetAddHandler.clear_errors();authListWidgetAddHandler.clear_input();return authListWidgetAddHandler.reload_list()})}else{return this.show_errors(gettext("Please enter a username or email."))}};AuthListWidget.prototype.reload_list=function(){var authListWidgetReloadList=this,$selectedOption;return this.get_member_list(function(error,memberList,divisionScheme){if(error!==null){authListWidgetReloadList.show_errors(error);return}authListWidgetReloadList.clear_rows();_.each(memberList,function(member){var $revokeBtn,labelTrans;labelTrans=gettext("Revoke access");$revokeBtn=$(_.template('<div class="revoke"><span class="icon fa fa-times-circle" aria-hidden="true"></span> <%- label %></div>')({label:labelTrans}),{class:"revoke"});$revokeBtn.click(function(){authListWidgetReloadList.modify_member_access(member.email,"revoke",function(err){if(err!==null){authListWidgetReloadList.show_errors(err);return}authListWidgetReloadList.clear_errors();authListWidgetReloadList.reload_list()})});if(authListWidgetReloadList.rolename==="Group Moderator"){if(divisionScheme!==undefined&&divisionScheme==="none"){authListWidgetReloadList.list_enabled=false;$selectedOption=$("select#member-lists-selector").children("option:selected");if($selectedOption[0].value===authListWidgetReloadList.rolename){authListWidgetReloadList.show_errors(gettext("This role requires a divided discussions scheme."));enableAddButton(false,authListWidgetReloadList)}}else{authListWidgetReloadList.list_enabled=true;enableAddButton(true,authListWidgetReloadList);authListWidgetReloadList.add_row([member.username,member.email,member.group_name,$revokeBtn])}}else{authListWidgetReloadList.add_row([member.username,member.email,$revokeBtn])}})})};AuthListWidget.prototype.clear_errors=function(){var result;result=this.$errorSection!==undefined?this.$errorSection.text(""):undefined;return result};AuthListWidget.prototype.show_errors=function(msg){var result;result=this.$errorSection!==undefined?this.$errorSection.text(msg):undefined;return result};AuthListWidget.prototype.get_member_list=function(cb){var authlistwidgetgetmemberlist=this;$.ajax({type:"POST",dataType:"json",url:this.list_endpoint,data:{rolename:this.rolename},success:function(data){return typeof cb==="function"?cb(null,data[authlistwidgetgetmemberlist.rolename],data.division_scheme):undefined}})};AuthListWidget.prototype.modify_member_access=function(uniqueStudentIdentifier,action,cb){var authlistwidgetmemberaccess=this;return $.ajax({type:"POST",dataType:"json",url:this.modify_endpoint,data:{unique_student_identifier:uniqueStudentIdentifier,rolename:this.rolename,action:action},success:function(data){return authlistwidgetmemberaccess.member_response(data)},error:statusAjaxError(function(){return typeof cb==="function"?cb(gettext("Error changing user's permissions.")):undefined})})};AuthListWidget.prototype.member_response=function(data){var msg;this.clear_errors();this.clear_input();if(data.userDoesNotExist){msg=gettext("Could not find a user with username or email address '<%- identifier %>'.");return this.show_errors(_.template(msg,{identifier:data.unique_student_identifier}))}else if(data.inactiveUser){msg=gettext("Error: User '<%- username %>' has not yet activated their account. Users must create and activate their accounts before they can be assigned a role.");return this.show_errors(_.template(msg,{username:data.unique_student_identifier}))}else if(data.removingSelfAsInstructor){return this.show_errors(gettext("Error: You cannot remove yourself from the Instructor group!"))}else{return this.reload_list()}};return AuthListWidget}(MemberListWidget);this.AutoEnrollmentViaCsv=function(){function AutoEnrollmentViaCsv($container){var autoenrollviacsv=this;this.$container=$container;this.$student_enrollment_form=this.$container.find("#student-auto-enroll-form");this.$enrollment_signup_button=this.$container.find("#submitBtn-auto_enroll_csv");this.$students_list_file=this.$container.find("input[name='students_list']");this.$csrf_token=this.$container.find("input[name='csrfmiddlewaretoken']");this.$results=this.$container.find("div.results");this.$browse_button=this.$container.find("#browseBtn-auto-enroll");this.$browse_file=this.$container.find("#browseFile");this.processing=false;this.$browse_button.on("change",function(event){if(event.currentTarget.files.length===1){return autoenrollviacsv.$browse_file.val(event.currentTarget.value.substring(event.currentTarget.value.lastIndexOf("\\")+1))}return false});this.$enrollment_signup_button.click(function(){return autoenrollviacsv.$student_enrollment_form.submit(function(event){var data;if(autoenrollviacsv.processing){return false}autoenrollviacsv.processing=true;event.preventDefault();data=new FormData(event.currentTarget);$.ajax({dataType:"json",type:"POST",url:event.currentTarget.action,data:data,processData:false,contentType:false,success:function(responsedata){autoenrollviacsv.processing=false;return autoenrollviacsv.display_response(responsedata)}});return false})})}AutoEnrollmentViaCsv.prototype.display_response=function(dataFromServer){var error,errors,generalError,renderResponse,resultFromServerIsSuccess,warning,warnings,i,j,k,len,len1,len2,ref,ref1,ref2,displayResponse=this;this.$results.empty();errors=[];warnings=[];resultFromServerIsSuccess=true;if(dataFromServer.general_errors.length){resultFromServerIsSuccess=false;ref=dataFromServer.general_errors;for(i=0,len=ref.length;i<len;i++){generalError=ref[i];generalError.is_general_error=true;errors.push(generalError)}}if(dataFromServer.row_errors.length){resultFromServerIsSuccess=false;ref1=dataFromServer.row_errors;for(j=0,len1=ref1.length;j<len1;j++){error=ref1[j];error.is_general_error=false;errors.push(error)}}if(dataFromServer.warnings.length){resultFromServerIsSuccess=false;ref2=dataFromServer.warnings;for(k=0,len2=ref2.length;k<len2;k++){warning=ref2[k];warning.is_general_error=false;warnings.push(warning)}}renderResponse=function(title,message,type,studentResults){var details,responseMessage,studentResult,l,len3;details=[];for(l=0,len3=studentResults.length;l<len3;l++){studentResult=studentResults[l];if(studentResult.is_general_error){details.push(studentResult.response)}else{responseMessage=studentResult.username+"  ("+studentResult.email+"):  "+"   ("+studentResult.response+")";details.push(responseMessage)}}return edx.HtmlUtils.append(displayResponse.$results,edx.HtmlUtils.HTML(displayResponse.render_notification_view(type,title,message,details)))};if(errors.length){renderResponse(gettext("Errors"),gettext("The following errors were generated:"),"error",errors)}if(warnings.length){renderResponse(gettext("Warnings"),gettext("The following warnings were generated:"),"warning",warnings)}if(resultFromServerIsSuccess){return renderResponse(gettext("Success"),gettext("All accounts were created successfully."),"confirmation",[])}return renderResponse()};AutoEnrollmentViaCsv.prototype.render_notification_view=function(type,title,message,details){var notificationModel,view;notificationModel=new NotificationModel;notificationModel.set({type:type,title:title,message:message,details:details});view=new NotificationView({model:notificationModel});view.render();return view.$el.html()};return AutoEnrollmentViaCsv}();BetaTesterBulkAddition=function(){function betaTesterBulkAddition($container){var betatest=this;this.$container=$container;this.$identifier_input=this.$container.find("textarea[name='student-ids-for-beta']");this.$btn_beta_testers=this.$container.find("input[name='beta-testers']");this.$checkbox_autoenroll=this.$container.find("input[name='auto-enroll-beta']");this.$checkbox_emailstudents=this.$container.find("input[name='email-students-beta']");this.$task_response=this.$container.find(".request-response");this.$request_response_error=this.$container.find(".request-response-error");this.$btn_beta_testers.click(function(event){var autoEnroll,sendData;emailStudents=betatest.$checkbox_emailstudents.is(":checked");autoEnroll=betatest.$checkbox_autoenroll.is(":checked");sendData={action:$(event.target).data("action"),identifiers:betatest.$identifier_input.val(),email_students:emailStudents,auto_enroll:autoEnroll};return $.ajax({dataType:"json",type:"POST",url:betatest.$btn_beta_testers.data("endpoint"),data:sendData,success:function(data){return betatest.display_response(data)},error:statusAjaxError(function(){return betatest.fail_with_error(gettext("Error adding/removing users as beta testers."))})})})}betaTesterBulkAddition.prototype.clear_input=function(){this.$identifier_input.val("");this.$checkbox_emailstudents.attr("checked",true);return this.$checkbox_autoenroll.attr("checked",true)};betaTesterBulkAddition.prototype.fail_with_error=function(msg){this.clear_input();this.$task_response.empty();this.$request_response_error.empty();return this.$request_response_error.text(msg)};betaTesterBulkAddition.prototype.display_response=function(dataFromServer){var errors,noUsers,renderList,sr,studentResults,successes,i,len,ref,displayResponse=this;this.clear_input();this.$task_response.empty();this.$request_response_error.empty();errors=[];successes=[];noUsers=[];ref=dataFromServer.results;for(i=0,len=ref.length;i<len;i++){studentResults=ref[i];if(studentResults.userDoesNotExist){noUsers.push(studentResults)}else if(studentResults.error){errors.push(studentResults)}else{successes.push(studentResults)}}renderList=function(label,ids){var identifier,$idsList,$taskResSection,j,len1;$taskResSection=$("<div/>",{class:"request-res-section"});$taskResSection.append($("<h3/>",{text:label}));$idsList=$("<ul/>");$taskResSection.append($idsList);for(j=0,len1=ids.length;j<len1;j++){identifier=ids[j];$idsList.append($("<li/>",{text:identifier}))}return displayResponse.$task_response.append($taskResSection)};if(successes.length&&dataFromServer.action==="add"){var j,len1,inActiveUsers,activeUsers;activeUsers=[];inActiveUsers=[];for(j=0,len1=successes.length;j<len1;j++){sr=successes[j];if(sr.is_active){activeUsers.push(sr.identifier)}else{inActiveUsers.push(sr.identifier)}}if(activeUsers.length){renderList(gettext("These users were successfully added as beta testers:"),activeUsers)}if(inActiveUsers.length){renderList(gettext("These users could not be added as beta testers because their accounts are not yet activated:"),inActiveUsers)}}if(successes.length&&dataFromServer.action==="remove"){renderList(gettext("These users were successfully removed as beta testers:"),function(){var j,len1,results;results=[];for(j=0,len1=successes.length;j<len1;j++){sr=successes[j];results.push(sr.identifier)}return results}())}if(errors.length&&dataFromServer.action==="add"){renderList(gettext("These users were not added as beta testers:"),function(){var j,len1,results;results=[];for(j=0,len1=errors.length;j<len1;j++){sr=errors[j];results.push(sr.identifier)}return results}())}if(errors.length&&dataFromServer.action==="remove"){renderList(gettext("These users were not removed as beta testers:"),function(){var j,len1,results;results=[];for(j=0,len1=errors.length;j<len1;j++){sr=errors[j];results.push(sr.identifier)}return results}())}if(noUsers.length){noUsers.push($(gettext("Users must create and activate their account before they can be promoted to beta tester.")));return renderList(gettext("Could not find users associated with the following identifiers:"),function(){var j,len1,results;results=[];for(j=0,len1=noUsers.length;j<len1;j++){sr=noUsers[j];results.push(sr.identifier)}return results}())}return renderList()};return betaTesterBulkAddition}();BatchEnrollment=function(){function batchEnrollment($container){var batchEnroll=this;this.$container=$container;this.$identifier_input=this.$container.find("textarea[name='student-ids']");this.$role=this.$container.find("select[name='role']");this.$enrollment_button=this.$container.find(".enrollment-button");this.$reason_field=this.$container.find("textarea[name='reason-field']");this.$checkbox_autoenroll=this.$container.find("input[name='auto-enroll']");this.$checkbox_emailstudents=this.$container.find("input[name='email-students']");this.checkbox_emailstudents_initialstate=this.$checkbox_emailstudents.is(":checked");this.$task_response=this.$container.find(".request-response");this.$request_response_error=this.$container.find(".request-response-error");this.$enrollment_button.click(function(event){var sendData;if(!batchEnroll.$reason_field.val()){batchEnroll.fail_with_error(gettext("Reason field should not be left blank."));return false}if(!batchEnroll.$role.val()){batchEnroll.fail_with_error(gettext("Role field should not be left unselected."));return false}emailStudents=batchEnroll.$checkbox_emailstudents.is(":checked");sendData={action:$(event.target).data("action"),identifiers:batchEnroll.$identifier_input.val(),role:batchEnroll.$role.val(),auto_enroll:batchEnroll.$checkbox_autoenroll.is(":checked"),email_students:emailStudents,reason:batchEnroll.$reason_field.val()};return $.ajax({dataType:"json",type:"POST",url:$(event.target).data("endpoint"),data:sendData,success:function(data){return batchEnroll.display_response(data)},error:statusAjaxError(function(){return batchEnroll.fail_with_error(gettext("Error enrolling/unenrolling users."))})})})}batchEnrollment.prototype.clear_input=function(){this.$identifier_input.val("");this.$reason_field.val("");this.$checkbox_emailstudents.attr("checked",this.checkbox_emailstudents_initialstate);return this.$checkbox_autoenroll.attr("checked",true)};batchEnrollment.prototype.fail_with_error=function(msg){this.clear_input();this.$task_response.empty();this.$request_response_error.empty();return this.$request_response_error.text(msg)};batchEnrollment.prototype.display_response=function(dataFromServer){var allowed,autoenrolled,enrolled,errors,errorsLabel,invalidIdentifier,notenrolled,notunenrolled,renderList,sr,studentResults,i,j,len,len1,ref,renderIdsLists,displayResponse=this;this.clear_input();this.$task_response.empty();this.$request_response_error.empty();invalidIdentifier=[];errors=[];enrolled=[];allowed=[];autoenrolled=[];notenrolled=[];notunenrolled=[];ref=dataFromServer.results;for(i=0,len=ref.length;i<len;i++){studentResults=ref[i];if(studentResults.invalidIdentifier){invalidIdentifier.push(studentResults)}else if(studentResults.error){errors.push(studentResults)}else if(studentResults.after.enrollment){enrolled.push(studentResults)}else if(studentResults.after.allowed){if(studentResults.after.auto_enroll){autoenrolled.push(studentResults)}else{allowed.push(studentResults)}}else if(dataFromServer.action==="unenroll"&&!studentResults.before.enrollment&&!studentResults.before.allowed){notunenrolled.push(studentResults)}else if(!studentResults.after.enrollment){notenrolled.push(studentResults)}else{console.warn("student results not reported to user")}}renderList=function(label,ids){var identifier,$idsList,$taskResSection,h,len3;$taskResSection=$("<div/>",{class:"request-res-section"});$taskResSection.append($("<h3/>",{text:label}));$idsList=$("<ul/>");$taskResSection.append($idsList);for(h=0,len3=ids.length;h<len3;h++){identifier=ids[h];$idsList.append($("<li/>",{text:identifier}))}return displayResponse.$task_response.append($taskResSection)};if(invalidIdentifier.length){renderList(gettext("The following email addresses and/or usernames are invalid:"),function(){var m,len4,results;results=[];for(m=0,len4=invalidIdentifier.length;m<len4;m++){sr=invalidIdentifier[m];results.push(sr.identifier)}return results}())}if(errors.length){errorsLabel=function(){if(dataFromServer.action==="enroll"){return"There was an error enrolling:"}else if(dataFromServer.action==="unenroll"){return"There was an error unenrolling:"}else{console.warn("unknown action from server '"+dataFromServer.action+"'");return"There was an error processing:"}}();renderIdsLists=function(errs){var srItem,k=0,results=[];for(k=0,len=errs.length;k<len;k++){srItem=errs[k];results.push(srItem.identifier)}return results};for(j=0,len1=errors.length;j<len1;j++){studentResults=errors[j];renderList(errorsLabel,renderIdsLists(errors))}}if(enrolled.length&&emailStudents){renderList(gettext("Successfully enrolled and sent email to the following users:"),function(){var k,len2,results;results=[];for(k=0,len2=enrolled.length;k<len2;k++){sr=enrolled[k];results.push(sr.identifier)}return results}())}if(enrolled.length&&!emailStudents){renderList(gettext("Successfully enrolled the following users:"),function(){var k,len2,results;results=[];for(k=0,len2=enrolled.length;k<len2;k++){sr=enrolled[k];results.push(sr.identifier)}return results}())}if(allowed.length&&emailStudents){renderList(gettext("Successfully sent enrollment emails to the following users. They will be allowed to enroll once they register:"),function(){var k,len2,results;results=[];for(k=0,len2=allowed.length;k<len2;k++){sr=allowed[k];results.push(sr.identifier)}return results}())}if(allowed.length&&!emailStudents){renderList(gettext("These users will be allowed to enroll once they register:"),function(){var k,len2,results;results=[];for(k=0,len2=allowed.length;k<len2;k++){sr=allowed[k];results.push(sr.identifier)}return results}())}if(autoenrolled.length&&emailStudents){renderList(gettext("Successfully sent enrollment emails to the following users. They will be enrolled once they register:"),function(){var k,len2,results;results=[];for(k=0,len2=autoenrolled.length;k<len2;k++){sr=autoenrolled[k];results.push(sr.identifier)}return results}())}if(autoenrolled.length&&!emailStudents){renderList(gettext("These users will be enrolled once they register:"),function(){var k,len2,results;results=[];for(k=0,len2=autoenrolled.length;k<len2;k++){sr=autoenrolled[k];results.push(sr.identifier)}return results}())}if(notenrolled.length&&emailStudents){renderList(gettext("Emails successfully sent. The following users are no longer enrolled in the course:"),function(){var k,len2,results;results=[];for(k=0,len2=notenrolled.length;k<len2;k++){sr=notenrolled[k];results.push(sr.identifier)}return results}())}if(notenrolled.length&&!emailStudents){renderList(gettext("The following users are no longer enrolled in the course:"),function(){var k,len2,results;results=[];for(k=0,len2=notenrolled.length;k<len2;k++){sr=notenrolled[k];results.push(sr.identifier)}return results}())}if(notunenrolled.length){return renderList(gettext("These users were not affiliated with the course so could not be unenrolled:"),function(){var k,len2,results;results=[];for(k=0,len2=notunenrolled.length;k<len2;k++){sr=notunenrolled[k];results.push(sr.identifier)}return results}())}return renderList()};return batchEnrollment}();this.AuthList=function(){function authList($container,rolename){var authlist=this;this.$container=$container;this.rolename=rolename;this.$display_table=this.$container.find(".auth-list-table");this.$request_response_error=this.$container.find(".request-response-error");this.$add_section=this.$container.find(".auth-list-add");this.$allow_field=this.$add_section.find("input[name='email']");this.$allow_button=this.$add_section.find("input[name='allow']");this.$allow_button.click(function(){authlist.access_change(authlist.$allow_field.val(),"allow",function(){return authlist.reload_auth_list()});return authlist.$allow_field.val("")});this.reload_auth_list()}authList.prototype.reload_auth_list=function(){var loadAuthList,ths=this;loadAuthList=function(data){var $tablePlaceholder,WHICH_CELL_IS_REVOKE,columns,grid,options,tableData;ths.$request_response_error.empty();ths.$display_table.empty();options={enableCellNavigation:true,enableColumnReorder:false,forceFitColumns:true};WHICH_CELL_IS_REVOKE=3;columns=[{id:"username",field:"username",name:"Username"},{id:"email",field:"email",name:"Email"},{id:"first_name",field:"first_name",name:"First Name"},{id:"revoke",field:"revoke",name:"Revoke",formatter:function(){return"<span class='revoke-link'>Revoke Access</span>"}}];tableData=data[ths.rolename];$tablePlaceholder=$("<div/>",{class:"slickgrid"});ths.$display_table.append($tablePlaceholder);grid=new window.Slick.Grid($tablePlaceholder,tableData,columns,options);return grid.onClick.subscribe(function(e,args){var item;item=args.grid.getDataItem(args.row);if(args.cell===WHICH_CELL_IS_REVOKE){return ths.access_change(item.email,"revoke",function(){return ths.reload_auth_list()})}return false})};return $.ajax({dataType:"json",type:"POST",url:this.$display_table.data("endpoint"),data:{rolename:this.rolename},success:loadAuthList,error:statusAjaxError(function(){return ths.$request_response_error.text("Error fetching list for '"+ths.rolename+"'")})})};authList.prototype.refresh=function(){this.$display_table.empty();return this.reload_auth_list()};authList.prototype.access_change=function(email,action,cb){var ths=this;return $.ajax({dataType:"json",type:"POST",url:this.$add_section.data("endpoint"),data:{email:email,rolename:this.rolename,action:action},success:function(data){return typeof cb==="function"?cb(data):undefined},error:statusAjaxError(function(){return ths.$request_response_error.text(gettext("Error changing user's permissions."))})})};return authList}();Membership=function(){function membership($section){var authList,i,len,ref,thismembership=this;this.$section=$section;this.$section.data("wrapper",this);plantTimeout(0,function(){return new BatchEnrollment(thismembership.$section.find(".batch-enrollment"))});plantTimeout(0,function(){return new AutoEnrollmentViaCsv(thismembership.$section.find(".auto_enroll_csv"))});plantTimeout(0,function(){return new BetaTesterBulkAddition(thismembership.$section.find(".batch-beta-testers"))});this.$list_selector=this.$section.find("select#member-lists-selector");this.$auth_list_containers=this.$section.find(".auth-list-container");this.$auth_list_errors=this.$section.find(".member-lists-management .request-response-error");this.auth_lists=_.map(this.$auth_list_containers,function(authListContainer){var rolename;rolename=$(authListContainer).data("rolename");return new AuthListWidget($(authListContainer),rolename,thismembership.$auth_list_errors)});this.$list_selector.empty();ref=this.auth_lists;for(i=0,len=ref.length;i<len;i++){authList=ref[i];this.$list_selector.append($("<option/>",{text:authList.$container.data("display-name"),value:authList.rolename,data:{auth_list:authList}}))}if(this.auth_lists.length===0){this.$list_selector.hide()}this.$list_selector.change(function(){var $opt,j,len1,ref1;$opt=thismembership.$list_selector.children("option:selected");if(!($opt.length>0)){return}ref1=thismembership.auth_lists;for(j=0,len1=ref1.length;j<len1;j++){authList=ref1[j];authList.$container.removeClass("active")}authList=$opt.data("auth_list");authList.$container.addClass("active");authList.re_view();if($opt[0].value==="Group Moderator"){if(!authList.list_enabled){authList.show_errors(gettext("This role requires a divided discussions scheme."));enableAddButton(false,authList)}else{enableAddButton(true,authList)}}});this.$list_selector.change()}membership.prototype.onClickTitle=function(){var list;for(list=0;list<this.auth_lists.length;list++){this.auth_lists[list].re_view()}};return membership}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{Membership:Membership})}).call(this);(function(){"use strict";var Metrics;Metrics=function(){function metrics($section){this.$section=$section;this.$section.data("wrapper",this)}metrics.prototype.onClickTitle=function(){};return metrics}();window.InstructorDashboard.sections.Metrics=Metrics}).call(this);(function(_){"use strict";var OpenResponseAssessment=function(){function OpenResponseAssessmentBlock($section){this.$section=$section;this.$section.data("wrapper",this);this.initialized=false}OpenResponseAssessmentBlock.prototype.onClickTitle=function(){var block=this.$section.find(".open-response-assessment");if(!this.initialized){this.initialized=true;XBlock.initializeBlock($(block).find(".xblock")[0])}};return OpenResponseAssessmentBlock}();if(typeof window.setup_debug==="undefined"){window.setup_debug=function(element_id,edit_link,staff_context){}}_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{OpenResponseAssessment:OpenResponseAssessment});this.OpenResponseAssessment=OpenResponseAssessment}).call(this,_);$(function(){var icons={header:"ui-icon-carat-1-e",activeHeader:"ui-icon-carat-1-s"};var $proctoringAccordionPane=$("#proctoring-accordion");
$proctoringAccordionPane.accordion({heightStyle:"content",animate:400,header:"> .wrap > .hd",icons:icons,collapsible:true})});(function(){"use strict";var KeywordValidator,PendingInstructorTasks,createEmailContentTable,createEmailMessageViews,createTaskListTable,plantTimeout,statusAjaxError;plantTimeout=function(){return window.InstructorDashboard.util.plantTimeout.apply(this,arguments)};statusAjaxError=function(){return window.InstructorDashboard.util.statusAjaxError.apply(this,arguments)};PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};createTaskListTable=function(){return window.InstructorDashboard.util.createTaskListTable.apply(this,arguments)};createEmailContentTable=function(){return window.InstructorDashboard.util.createEmailContentTable.apply(this,arguments)};createEmailMessageViews=function(){return window.InstructorDashboard.util.createEmailMessageViews.apply(this,arguments)};KeywordValidator=function(){return window.InstructorDashboard.util.KeywordValidator};this.SendEmail=function(){function SendEmail($container){var sendemail=this;this.$container=$container;this.$emailEditor=XBlock.initializeBlock($(".xblock-studio_view"));this.$send_to=this.$container.find("input[name='send_to']");this.$cohort_targets=this.$send_to.filter('[value^="cohort:"]');this.$course_mode_targets=this.$send_to.filter('[value^="track:"]');this.$subject=this.$container.find("input[name='subject']");this.$btn_send=this.$container.find("input[name='send']");this.$task_response=this.$container.find(".request-response");this.$request_response_error=this.$container.find(".request-response-error");this.$content_request_response_error=this.$container.find(".content-request-response-error");this.$history_request_response_error=this.$container.find(".history-request-response-error");this.$btn_task_history_email=this.$container.find("input[name='task-history-email']");this.$btn_task_history_email_content=this.$container.find("input[name='task-history-email-content']");this.$table_task_history_email=this.$container.find(".task-history-email-table");this.$table_email_content_history=this.$container.find(".content-history-email-table");this.$email_content_table_inner=this.$container.find(".content-history-table-inner");this.$email_messages_wrapper=this.$container.find(".email-messages-wrapper");this.$btn_send.click(function(){var body,confirmMessage,displayTarget,fullConfirmMessage,message,sendData,subject,successMessage,target,targets,validation,i,len;subject=sendemail.$subject.val();body=sendemail.$emailEditor.save().data;targets=[];sendemail.$send_to.filter(":checked").each(function(){return targets.push(this.value)});if(subject===""){return alert(gettext("Your message must have a subject."))}else if(body===""){return alert(gettext("Your message cannot be blank."))}else if(targets.length===0){return alert(gettext("Your message must have at least one target."))}else{validation=KeywordValidator().validate_string(body);if(!validation.isValid){message=gettext("There are invalid keywords in your email. Check the following keywords and try again.");message+="\n"+validation.invalidKeywords.join("\n");alert(message);return false}displayTarget=function(value){if(value==="myself"){return gettext("Yourself")}else if(value==="staff"){return gettext("Everyone who has staff privileges in this course")}else if(value==="learners"){return gettext("All learners who are enrolled in this course")}else if(value.startsWith("cohort")){return gettext("All learners in the {cohort_name} cohort").replace("{cohort_name}",value.slice(value.indexOf(":")+1))}else if(value.startsWith("track")){return gettext("All learners in the {track_name} track").replace("{track_name}",value.slice(value.indexOf(":")+1))}};successMessage=gettext("Your email message was successfully queued for sending. In courses with a large number of learners, email messages to learners might take up to an hour to be sent.");confirmMessage=gettext("You are sending an email message with the subject {subject} to the following recipients.");for(i=0,len=targets.length;i<len;i++){target=targets[i];confirmMessage+="\n-"+displayTarget(target)}confirmMessage+="\n\n"+gettext("Is this OK?");fullConfirmMessage=confirmMessage.replace("{subject}",subject);if(confirm(fullConfirmMessage)){sendData={action:"send",send_to:JSON.stringify(targets),subject:subject,message:body};return $.ajax({type:"POST",dataType:"json",url:sendemail.$btn_send.data("endpoint"),data:sendData,success:function(){return sendemail.display_response(successMessage)},error:statusAjaxError(function(){return sendemail.fail_with_error(gettext("Error sending email."))})})}else{sendemail.task_response.empty();return sendemail.$request_response_error.empty()}}});this.$btn_task_history_email.click(function(){var url=sendemail.$btn_task_history_email.data("endpoint");return $.ajax({type:"POST",dataType:"json",url:url,success:function(data){if(data.tasks.length){return createTaskListTable(sendemail.$table_task_history_email,data.tasks)}else{sendemail.$history_request_response_error.text(gettext("There is no email history for this course."));return sendemail.$history_request_response_error.css({display:"block"})}},error:statusAjaxError(function(){return sendemail.$history_request_response_error.text(gettext("There was an error obtaining email task history for this course."))})})});this.$btn_task_history_email_content.click(function(){var url=sendemail.$btn_task_history_email_content.data("endpoint");return $.ajax({type:"POST",dataType:"json",url:url,success:function(data){if(data.emails.length){createEmailContentTable(sendemail.$table_email_content_history,sendemail.$email_content_table_inner,data.emails);return createEmailMessageViews(sendemail.$email_messages_wrapper,data.emails)}else{sendemail.$content_request_response_error.text(gettext("There is no email history for this course."));return sendemail.$content_request_response_error.css({display:"block"})}},error:statusAjaxError(function(){return sendemail.$content_request_response_error.text(gettext("There was an error obtaining email content history for this course."))})})});this.$send_to.change(function(){var targets;var inputDisable=function(){this.checked=false;this.disabled=true;return true};var inputEnable=function(){this.disabled=false;return true};if($("input#target_learners:checked").length){sendemail.$cohort_targets.each(inputDisable);sendemail.$course_mode_targets.each(inputDisable)}else{sendemail.$cohort_targets.each(inputEnable);sendemail.$course_mode_targets.each(inputEnable)}targets=[];$('input[name="send_to"]:checked+label').each(function(){return targets.push(this.innerText.replace(/\s*\n.*/g,""))});return $(".send_to_list").text(gettext("Send to:")+" "+targets.join(", "))})}SendEmail.prototype.fail_with_error=function(msg){this.$task_response.empty();this.$request_response_error.empty();this.$request_response_error.text(msg);return $(".msg-confirm").css({display:"none"})};SendEmail.prototype.display_response=function(dataFromServer){this.$task_response.empty();this.$request_response_error.empty();this.$task_response.text(dataFromServer);return $(".msg-confirm").css({display:"block"})};return SendEmail}();this.Email=function(){function email($section){var eml=this;this.$section=$section;this.$section.data("wrapper",this);plantTimeout(0,function(){return new SendEmail(eml.$section.find(".send-email"))});this.instructor_tasks=new(PendingInstructorTasks())(this.$section)}email.prototype.onClickTitle=function(){return this.instructor_tasks.task_poller.start()};email.prototype.onExit=function(){return this.instructor_tasks.task_poller.stop()};return email}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{Email:this.Email})}).call(this);(function(){"use strict";var PendingInstructorTasks,createTaskListTable,findAndAssert,statusAjaxError;statusAjaxError=function(){return window.InstructorDashboard.util.statusAjaxError.apply(this,arguments)};createTaskListTable=function(){return window.InstructorDashboard.util.createTaskListTable.apply(this,arguments)};PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};findAndAssert=function($root,selector){var item,msg;item=$root.find(selector);if(item.length!==1){msg="Failed Element Selection";throw msg}else{return item}};this.StudentAdmin=function(){function StudentAdmin($section){var studentadmin=this;this.$section=$section;this.$section.data("wrapper",this);this.$field_student_select_enrollment_status=findAndAssert(this.$section,"input[name='student-select-enrollment-status']");this.$field_student_select_progress=findAndAssert(this.$section,"input[name='student-select-progress']");this.$field_student_select_grade=findAndAssert(this.$section,"input[name='student-select-grade']");this.$progress_link=findAndAssert(this.$section,"a.progress-link");this.$field_problem_select_single=findAndAssert(this.$section,"input[name='problem-select-single']");this.$btn_reset_attempts_single=findAndAssert(this.$section,"input[name='reset-attempts-single']");this.$btn_delete_state_single=this.$section.find("input[name='delete-state-single']");this.$btn_rescore_problem_single=this.$section.find("input[name='rescore-problem-single']");this.$btn_rescore_problem_if_higher_single=this.$section.find("input[name='rescore-problem-if-higher-single']");this.$btn_override_problem_score_single=this.$section.find("input[name='override-problem-score-single']");this.$field_select_score_single=findAndAssert(this.$section,"input[name='score-select-single']");this.$btn_task_history_single=this.$section.find("input[name='task-history-single']");this.$table_task_history_single=this.$section.find(".task-history-single-table");this.$field_exam_grade=this.$section.find("input[name='entrance-exam-student-select-grade']");this.$btn_reset_entrance_exam_attempts=this.$section.find("input[name='reset-entrance-exam-attempts']");this.$btn_delete_entrance_exam_state=this.$section.find("input[name='delete-entrance-exam-state']");this.$btn_rescore_entrance_exam=this.$section.find("input[name='rescore-entrance-exam']");this.$btn_rescore_entrance_exam_if_higher=this.$section.find("input[name='rescore-entrance-exam-if-higher']");this.$btn_skip_entrance_exam=this.$section.find("input[name='skip-entrance-exam']");this.$btn_entrance_exam_task_history=this.$section.find("input[name='entrance-exam-task-history']");this.$table_entrance_exam_task_history=this.$section.find(".entrance-exam-task-history-table");this.$field_problem_select_all=this.$section.find("input[name='problem-select-all']");this.$btn_reset_attempts_all=this.$section.find("input[name='reset-attempts-all']");this.$btn_rescore_problem_all=this.$section.find("input[name='rescore-problem-all']");this.$btn_rescore_problem_if_higher_all=this.$section.find("input[name='rescore-problem-all-if-higher']");this.$btn_task_history_all=this.$section.find("input[name='task-history-all']");this.$table_task_history_all=this.$section.find(".task-history-all-table");this.instructor_tasks=new(PendingInstructorTasks())(this.$section);this.$request_err_enrollment_status=findAndAssert(this.$section,".student-enrollment-status-container .request-response-error");this.$request_err_progress=findAndAssert(this.$section,".student-progress-container .request-response-error");this.$request_err_grade=findAndAssert(this.$section,".student-grade-container .request-response-error");this.$request_err_ee=this.$section.find(".entrance-exam-grade-container .request-response-error");this.$request_response_error_all=this.$section.find(".course-specific-container .request-response-error");this.$enrollment_status_link=findAndAssert(this.$section,"a.enrollment-status-link");this.$enrollment_status=findAndAssert(this.$section,".student-enrollment-status");this.$enrollment_status_link.click(function(e){var errorMessage,fullErrorMessage,uniqStudentIdentifier;e.preventDefault();uniqStudentIdentifier=studentadmin.$field_student_select_enrollment_status.val();if(!uniqStudentIdentifier){studentadmin.$enrollment_status.text("");return studentadmin.$request_err_enrollment_status.text(gettext("Please enter a student email address or username."))}errorMessage=gettext("Error getting enrollment status for '<%- student_id %>'. Make sure that the student identifier is spelled correctly.");fullErrorMessage=_.template(errorMessage)({student_id:uniqStudentIdentifier});studentadmin.$enrollment_status.text(gettext("Retrieving enrollment status..."));return $.ajax({type:"POST",dataType:"json",url:studentadmin.$enrollment_status_link.data("endpoint"),data:{course_id:studentadmin.$enrollment_status_link.data("course-id"),unique_student_identifier:uniqStudentIdentifier},success:studentadmin.clear_errors_then(function(data){return studentadmin.$enrollment_status.text(data.enrollment_status)}),error:statusAjaxError(function(){studentadmin.$enrollment_status.text("");return studentadmin.$request_err_enrollment_status.text(fullErrorMessage)})})});this.$progress_link.click(function(e){var errorMessage,fullErrorMessage,uniqStudentIdentifier;e.preventDefault();uniqStudentIdentifier=studentadmin.$field_student_select_progress.val();if(!uniqStudentIdentifier){return studentadmin.$request_err_progress.text(gettext("Please enter a student email address or username."))}errorMessage=gettext("Error getting student progress url for '<%- student_id %>'. Make sure that the student identifier is spelled correctly.");fullErrorMessage=_.template(errorMessage)({student_id:uniqStudentIdentifier});return $.ajax({type:"POST",dataType:"json",url:studentadmin.$progress_link.data("endpoint"),data:{unique_student_identifier:uniqStudentIdentifier},success:studentadmin.clear_errors_then(function(data){window.location=data.progress_url;return window.location}),error:statusAjaxError(function(){return studentadmin.$request_err_progress.text(fullErrorMessage)})})});this.$btn_reset_attempts_single.click(function(){var errorMessage,fullErrorMessage,fullSuccessMessage,problemToReset,sendData,successMessage,uniqStudentIdentifier;uniqStudentIdentifier=studentadmin.$field_student_select_grade.val();problemToReset=studentadmin.$field_problem_select_single.val();if(!uniqStudentIdentifier){return studentadmin.$request_err_grade.text(gettext("Please enter a student email address or username."))}if(!problemToReset){return studentadmin.$request_err_grade.text(gettext("Please enter a problem location."))}sendData={unique_student_identifier:uniqStudentIdentifier,problem_to_reset:problemToReset,delete_module:false};successMessage=gettext("Success! Problem attempts reset for problem '<%- problem_id %>' and student '<%- student_id %>'.");errorMessage=gettext("Error resetting problem attempts for problem '<%= problem_id %>' and student '<%- student_id %>'. Make sure that the problem and student identifiers are complete and correct.");fullSuccessMessage=_.template(successMessage)({problem_id:problemToReset,student_id:uniqStudentIdentifier});fullErrorMessage=_.template(errorMessage)({problem_id:problemToReset,student_id:uniqStudentIdentifier});return $.ajax({type:"POST",dataType:"json",url:studentadmin.$btn_reset_attempts_single.data("endpoint"),data:sendData,success:studentadmin.clear_errors_then(function(){return alert(fullSuccessMessage)}),error:statusAjaxError(function(){return studentadmin.$request_err_grade.text(fullErrorMessage)})})});this.$btn_delete_state_single.click(function(){var confirmMessage,errorMessage,fullConfirmMessage,fullErrorMessage,problemToReset,sendData,uniqStudentIdentifier;uniqStudentIdentifier=studentadmin.$field_student_select_grade.val();problemToReset=studentadmin.$field_problem_select_single.val();if(!uniqStudentIdentifier){return studentadmin.$request_err_grade.text(gettext("Please enter a student email address or username."))}if(!problemToReset){return studentadmin.$request_err_grade.text(gettext("Please enter a problem location."))}confirmMessage=gettext("Delete student '<%- student_id %>'s state on problem '<%- problem_id %>'?");fullConfirmMessage=_.template(confirmMessage)({student_id:uniqStudentIdentifier,problem_id:problemToReset});if(window.confirm(fullConfirmMessage)){sendData={unique_student_identifier:uniqStudentIdentifier,problem_to_reset:problemToReset,delete_module:true};errorMessage=gettext("Error deleting student '<%- student_id %>'s state on problem '<%- problem_id %>'. Make sure that the problem and student identifiers are complete and correct.");fullErrorMessage=_.template(errorMessage)({student_id:uniqStudentIdentifier,problem_id:problemToReset});return $.ajax({type:"POST",dataType:"json",url:studentadmin.$btn_delete_state_single.data("endpoint"),data:sendData,success:studentadmin.clear_errors_then(function(){return alert(gettext("Module state successfully deleted."))}),error:statusAjaxError(function(){return studentadmin.$request_err_grade.text(fullErrorMessage)})})}else{return studentadmin.clear_errors()}});this.$btn_rescore_problem_single.click(function(){return studentadmin.rescore_problem_single(false)});this.$btn_rescore_problem_if_higher_single.click(function(){return studentadmin.rescore_problem_single(true)});this.$btn_task_history_single.click(function(){var errorMessage,fullErrorMessage,problemToReset,sendData,uniqStudentIdentifier;uniqStudentIdentifier=studentadmin.$field_student_select_grade.val();problemToReset=studentadmin.$field_problem_select_single.val();if(!uniqStudentIdentifier){return studentadmin.$request_err_grade.text(gettext("Please enter a student email address or username."))}if(!problemToReset){return studentadmin.$request_err_grade.text(gettext("Please enter a problem location."))}sendData={unique_student_identifier:uniqStudentIdentifier,problem_location_str:problemToReset};errorMessage=gettext("Error getting task history for problem '<%- problem_id %>' and student '<%- student_id %>'. Make sure that the problem and student identifiers are complete and correct.");fullErrorMessage=_.template(errorMessage)({student_id:uniqStudentIdentifier,problem_id:problemToReset});return $.ajax({type:"POST",dataType:"json",url:studentadmin.$btn_task_history_single.data("endpoint"),data:sendData,success:studentadmin.clear_errors_then(function(data){return createTaskListTable(studentadmin.$table_task_history_single,data.tasks)}),error:statusAjaxError(function(){return studentadmin.$request_err_grade.text(fullErrorMessage)})})});this.$btn_reset_entrance_exam_attempts.click(function(){var sendData,uniqStudentIdentifier;uniqStudentIdentifier=studentadmin.$field_exam_grade.val();if(!uniqStudentIdentifier){return studentadmin.$request_err_ee.text(gettext("Please enter a student email address or username."))}sendData={unique_student_identifier:uniqStudentIdentifier,delete_module:false};return $.ajax({type:"POST",dataType:"json",url:studentadmin.$btn_reset_entrance_exam_attempts.data("endpoint"),data:sendData,success:studentadmin.clear_errors_then(function(){var fullSuccessMessage,successMessage;successMessage=gettext("Entrance exam attempts is being reset for student '{student_id}'.");fullSuccessMessage=interpolate_text(successMessage,{student_id:uniqStudentIdentifier});return alert(fullSuccessMessage)}),error:statusAjaxError(function(){var errorMessage,fullErrorMessage;errorMessage=gettext("Error resetting entrance exam attempts for student '{student_id}'. Make sure student identifier is correct.");fullErrorMessage=interpolate_text(errorMessage,{student_id:uniqStudentIdentifier});return studentadmin.$request_err_ee.text(fullErrorMessage)})})});this.$btn_rescore_entrance_exam.click(function(){return studentadmin.rescore_entrance_exam_all(false)});this.$btn_rescore_entrance_exam_if_higher.click(function(){return studentadmin.rescore_entrance_exam_all(true)});this.$btn_skip_entrance_exam.click(function(){var confirmMessage,fullConfirmMessage,sendData,uniqStudentIdentifier;uniqStudentIdentifier=studentadmin.$field_exam_grade.val();if(!uniqStudentIdentifier){return studentadmin.$request_err_ee.text(gettext("Enter a student's username or email address."))}confirmMessage=gettext("Do you want to allow this student ('{student_id}') to skip the entrance exam?");fullConfirmMessage=interpolate_text(confirmMessage,{student_id:uniqStudentIdentifier});if(window.confirm(fullConfirmMessage)){sendData={unique_student_identifier:uniqStudentIdentifier};return $.ajax({dataType:"json",url:studentadmin.$btn_skip_entrance_exam.data("endpoint"),data:sendData,type:"POST",success:studentadmin.clear_errors_then(function(data){return alert(data.message)}),error:statusAjaxError(function(){var errorMessage;errorMessage=gettext("An error occurred. Make sure that the student's username or email address is correct and try again.");return studentadmin.$request_err_ee.text(errorMessage)})})}return false});this.$btn_delete_entrance_exam_state.click(function(){var sendData,uniqStudentIdentifier;uniqStudentIdentifier=studentadmin.$field_exam_grade.val();if(!uniqStudentIdentifier){return studentadmin.$request_err_ee.text(gettext("Please enter a student email address or username."))}sendData={unique_student_identifier:uniqStudentIdentifier,delete_module:true};return $.ajax({type:"POST",dataType:"json",url:studentadmin.$btn_delete_entrance_exam_state.data("endpoint"),data:sendData,success:studentadmin.clear_errors_then(function(){var fullSuccessMessage,successMessage;successMessage=gettext("Entrance exam state is being deleted for student '{student_id}'.");fullSuccessMessage=interpolate_text(successMessage,{student_id:uniqStudentIdentifier});return alert(fullSuccessMessage)}),error:statusAjaxError(function(){var errorMessage,fullErrorMessage;errorMessage=gettext("Error deleting entrance exam state for student '{student_id}'. Make sure student identifier is correct.");fullErrorMessage=interpolate_text(errorMessage,{student_id:uniqStudentIdentifier});return studentadmin.$request_err_ee.text(fullErrorMessage)})})});this.$btn_entrance_exam_task_history.click(function(){var sendData,uniqStudentIdentifier;uniqStudentIdentifier=studentadmin.$field_exam_grade.val();if(!uniqStudentIdentifier){return studentadmin.$request_err_ee.text(gettext("Enter a student's username or email address."))}sendData={unique_student_identifier:uniqStudentIdentifier};return $.ajax({type:"POST",dataType:"json",url:studentadmin.$btn_entrance_exam_task_history.data("endpoint"),data:sendData,success:studentadmin.clear_errors_then(function(data){return createTaskListTable(studentadmin.$table_entrance_exam_task_history,data.tasks)}),error:statusAjaxError(function(){var errorMessage,fullErrorMessage;errorMessage=gettext("Error getting entrance exam task history for student '{student_id}'. Make sure student identifier is correct.");fullErrorMessage=interpolate_text(errorMessage,{student_id:uniqStudentIdentifier});return studentadmin.$request_err_ee.text(fullErrorMessage)})})});this.$btn_reset_attempts_all.click(function(){var confirmMessage,errorMessage,fullConfirmMessage,fullErrorMessage,fullSuccessMessage,problemToReset,sendData,successMessage;problemToReset=studentadmin.$field_problem_select_all.val();if(!problemToReset){return studentadmin.$request_response_error_all.text(gettext("Please enter a problem location."))}confirmMessage=gettext("Reset attempts for all students on problem '<%- problem_id %>'?");fullConfirmMessage=_.template(confirmMessage)({problem_id:problemToReset});if(window.confirm(fullConfirmMessage)){sendData={all_students:true,problem_to_reset:problemToReset};successMessage=gettext("Successfully started task to reset attempts for problem '<%- problem_id %>'. Click the 'Show Task Status' button to see the status of the task.");fullSuccessMessage=_.template(successMessage)({problem_id:problemToReset});errorMessage=gettext("Error starting a task to reset attempts for all students on problem '<%- problem_id %>'. Make sure that the problem identifier is complete and correct.");fullErrorMessage=_.template(errorMessage)({problem_id:problemToReset});return $.ajax({type:"POST",dataType:"json",url:studentadmin.$btn_reset_attempts_all.data("endpoint"),data:sendData,success:studentadmin.clear_errors_then(function(){return alert(fullSuccessMessage)}),error:statusAjaxError(function(){return studentadmin.$request_response_error_all.text(fullErrorMessage)})})}else{return studentadmin.clear_errors()}});this.$btn_rescore_problem_all.click(function(){return studentadmin.rescore_problem_all(false)});this.$btn_rescore_problem_if_higher_all.click(function(){return studentadmin.rescore_problem_all(true)});this.$btn_override_problem_score_single.click(function(){return studentadmin.override_problem_score_single()});this.$btn_task_history_all.click(function(){var sendData;sendData={problem_location_str:studentadmin.$field_problem_select_all.val()};if(!sendData.problem_location_str){return studentadmin.$request_response_error_all.text(gettext("Please enter a problem location."))}return $.ajax({type:"POST",dataType:"json",url:studentadmin.$btn_task_history_all.data("endpoint"),data:sendData,success:studentadmin.clear_errors_then(function(data){return createTaskListTable(studentadmin.$table_task_history_all,data.tasks)}),error:statusAjaxError(function(){return studentadmin.$request_response_error_all.text(gettext("Error listing task history for this student and problem."))})})})}StudentAdmin.prototype.rescore_problem_single=function(onlyIfHigher){var defaultErrorMessage,fullDefaultErrorMessage,fullSuccessMessage,problemToReset,sendData,successMessage,uniqStudentIdentifier,that=this;uniqStudentIdentifier=this.$field_student_select_grade.val();problemToReset=this.$field_problem_select_single.val();if(!uniqStudentIdentifier){return this.$request_err_grade.text(gettext("Please enter a student email address or username."))}if(!problemToReset){return this.$request_err_grade.text(gettext("Please enter a problem location."))}sendData={unique_student_identifier:uniqStudentIdentifier,problem_to_reset:problemToReset,only_if_higher:onlyIfHigher};successMessage=gettext("Started rescore problem task for problem '<%- problem_id %>' and student '<%- student_id %>'. Click the 'Show Task Status' button to see the status of the task.");fullSuccessMessage=_.template(successMessage)({student_id:uniqStudentIdentifier,problem_id:problemToReset});defaultErrorMessage=gettext("Error starting a task to rescore problem '<%- problem_id %>' for student '<%- student_id %>'. Make sure that the the problem and student identifiers are complete and correct.");fullDefaultErrorMessage=_.template(defaultErrorMessage)({student_id:uniqStudentIdentifier,problem_id:problemToReset});return $.ajax({type:"POST",dataType:"json",url:this.$btn_rescore_problem_single.data("endpoint"),data:sendData,success:this.clear_errors_then(function(){return alert(fullSuccessMessage)}),error:statusAjaxError(function(response){if(response.responseText){return that.$request_err_grade.text(response.responseText)}return that.$request_err_grade.text(fullDefaultErrorMessage)})})};StudentAdmin.prototype.override_problem_score_single=function(){var defaultErrorMessage,fullDefaultErrorMessage,fullSuccessMessage,problemToReset,score,sendData,successMessage,uniqStudentIdentifier,that=this;uniqStudentIdentifier=this.$field_student_select_grade.val();problemToReset=this.$field_problem_select_single.val();score=this.$field_select_score_single.val();if(!uniqStudentIdentifier){return this.$request_err_grade.text(gettext("Please enter a student email address or username."))}if(!problemToReset){return this.$request_err_grade.text(gettext("Please enter a problem location."))}if(!score){return this.$request_err_grade.text(gettext("Please enter a score."))}sendData={unique_student_identifier:uniqStudentIdentifier,problem_to_reset:problemToReset,score:score};successMessage=gettext("Started task to override the score for problem '<%- problem_id %>' and student '<%- student_id %>'. Click the 'Show Task Status' button to see the status of the task.");fullSuccessMessage=_.template(successMessage)({student_id:uniqStudentIdentifier,problem_id:problemToReset});defaultErrorMessage=gettext("Error starting a task to override score for problem '<%- problem_id %>' for student '<%- student_id %>'. Make sure that the the score and the problem and student identifiers are complete and correct.");fullDefaultErrorMessage=_.template(defaultErrorMessage)({student_id:uniqStudentIdentifier,problem_id:problemToReset});return $.ajax({type:"POST",dataType:"json",url:this.$btn_override_problem_score_single.data("endpoint"),data:sendData,success:this.clear_errors_then(function(){return alert(fullSuccessMessage)}),error:statusAjaxError(function(response){if(response.responseText){return that.$request_err_grade.text(response.responseText)}return that.$request_err_grade.text(fullDefaultErrorMessage)})})};StudentAdmin.prototype.rescore_entrance_exam_all=function(onlyIfHigher){var sendData,uniqStudentIdentifier,that=this;uniqStudentIdentifier=this.$field_exam_grade.val();if(!uniqStudentIdentifier){return this.$request_err_ee.text(gettext("Please enter a student email address or username."))}sendData={unique_student_identifier:uniqStudentIdentifier,only_if_higher:onlyIfHigher};return $.ajax({type:"POST",dataType:"json",url:this.$btn_rescore_entrance_exam.data("endpoint"),data:sendData,success:this.clear_errors_then(function(){var fullSuccessMessage,successMessage;successMessage=gettext("Started entrance exam rescore task for student '{student_id}'. Click the 'Show Task Status' button to see the status of the task.");fullSuccessMessage=interpolate_text(successMessage,{student_id:uniqStudentIdentifier});return alert(fullSuccessMessage)}),error:statusAjaxError(function(){var errorMessage,fullErrorMessage;errorMessage=gettext("Error starting a task to rescore entrance exam for student '{student_id}'. Make sure that entrance exam has problems in it and student identifier is correct.");fullErrorMessage=interpolate_text(errorMessage,{student_id:uniqStudentIdentifier});return that.$request_err_ee.text(fullErrorMessage)})})};StudentAdmin.prototype.rescore_problem_all=function(onlyIfHigher){var confirmMessage,defaultErrorMessage,fullConfirmMessage,fullDefaultErrorMessage,fullSuccessMessage,problemToReset,sendData,successMessage,that=this;problemToReset=this.$field_problem_select_all.val();if(!problemToReset){return this.$request_response_error_all.text(gettext("Please enter a problem location."))}confirmMessage=gettext("Rescore problem '<%- problem_id %>' for all students?");fullConfirmMessage=_.template(confirmMessage)({problem_id:problemToReset});if(window.confirm(fullConfirmMessage)){sendData={all_students:true,problem_to_reset:problemToReset,only_if_higher:onlyIfHigher};successMessage=gettext("Successfully started task to rescore problem '<%- problem_id %>' for all students. Click the 'Show Task Status' button to see the status of the task.");fullSuccessMessage=_.template(successMessage)({problem_id:problemToReset});defaultErrorMessage=gettext("Error starting a task to rescore problem '<%- problem_id %>'. Make sure that the problem identifier is complete and correct.");fullDefaultErrorMessage=_.template(defaultErrorMessage)({problem_id:problemToReset});return $.ajax({type:"POST",dataType:"json",url:this.$btn_rescore_problem_all.data("endpoint"),data:sendData,success:this.clear_errors_then(function(){return alert(fullSuccessMessage)}),error:statusAjaxError(function(response){if(response.responseText){return that.$request_response_error_all.text(response.responseText)}return that.$request_response_error_all.text(fullDefaultErrorMessage)})})}else{return this.clear_errors()}};StudentAdmin.prototype.clear_errors_then=function(cb){this.$request_err_enrollment_status.empty();this.$request_err_progress.empty();this.$request_err_grade.empty();this.$request_err_ee.empty();this.$request_response_error_all.empty();return function(){return cb!=null?cb.apply(this,arguments):void 0}};StudentAdmin.prototype.clear_errors=function(){
this.$request_err_enrollment_status.empty();this.$request_err_progress.empty();this.$request_err_grade.empty();this.$request_err_ee.empty();return this.$request_response_error_all.empty()};StudentAdmin.prototype.onClickTitle=function(){return this.instructor_tasks.task_poller.start()};StudentAdmin.prototype.onExit=function(){return this.instructor_tasks.task_poller.stop()};return StudentAdmin}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{StudentAdmin:this.StudentAdmin})}).call(this);(function(){"use strict";var IntervalManager,KeywordValidator,createEmailContentTable,createEmailMessageViews,findAndAssert,pWrapper,plantInterval,plantTimeout,sentToFormatter,setupCopyEmailButton,subjectFormatter,unknownIfNullFormatter,unknownP,anyOf=[].indexOf||function(item){var i,l;for(i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item){return i}}return-1};plantTimeout=function(ms,cb){return setTimeout(cb,ms)};plantInterval=function(ms,cb){return setInterval(cb,ms)};findAndAssert=function($root,selector){var item,msg;item=$root.find(selector);if(item.length!==1){msg="Failed Element Selection";throw msg}else{return item}};this.statusAjaxError=function(handler){return function(jqXHR,textStatus,errorThrown){return handler.apply(this,arguments)}};this.createTaskListTable=function($tableTasks,tasksData){var $tablePlaceholder,columns,options,tableData;$tableTasks.empty();options={enableCellNavigation:true,enableColumnReorder:false,autoHeight:true,rowHeight:100,forceFitColumns:true};columns=[{id:"task_type",field:"task_type",name:gettext("Task Type"),minWidth:102},{id:"task_input",field:"task_input",name:gettext("Task inputs"),minWidth:150},{id:"task_id",field:"task_id",name:gettext("Task ID"),minWidth:150},{id:"requester",field:"requester",name:gettext("Requester"),minWidth:80},{id:"created",field:"created",name:gettext("Submitted"),minWidth:120},{id:"duration_sec",field:"duration_sec",name:gettext("Duration (sec)"),minWidth:80},{id:"task_state",field:"task_state",name:gettext("State"),minWidth:80},{id:"status",field:"status",name:gettext("Task Status"),minWidth:80},{id:"task_message",field:"task_message",name:gettext("Task Progress"),minWidth:120}];tableData=tasksData;$tablePlaceholder=$("<div/>",{class:"slickgrid"});$tableTasks.append($tablePlaceholder);return new Slick.Grid($tablePlaceholder,tableData,columns,options)};subjectFormatter=function(row,cell,value){var subjectText;if(value===null){return gettext("An error occurred retrieving your email. Please try again later, and contact technical support if the problem persists.")}subjectText=$("<span>").text(value.subject).html();return edx.HtmlUtils.joinHtml(edx.HtmlUtils.HTML('<p><a href="#email_message_'),value.id,edx.HtmlUtils.HTML('" id="email_message_'),value.id,edx.HtmlUtils.HTML('_trig">'),subjectText,edx.HtmlUtils.HTML("</a></p>"))};pWrapper=function(value){return edx.HtmlUtils.joinHtml(edx.HtmlUtils.HTML("<p>"),value,edx.HtmlUtils.HTML("</p>"))};unknownP=function(){return pWrapper(gettext("Unknown"))};sentToFormatter=function(row,cell,value){if(value===null){return unknownP()}else{return pWrapper(value.join(", "))}};unknownIfNullFormatter=function(row,cell,value){if(value===null){return unknownP()}else{return pWrapper(value)}};createEmailContentTable=function($tableEmails,$tableEmailsInner,emailData){var $tablePlaceholder,columns,options,tableData;$tableEmailsInner.empty();$tableEmails.show();options={enableCellNavigation:true,enableColumnReorder:false,autoHeight:true,rowHeight:50,forceFitColumns:true};columns=[{id:"email",field:"email",name:gettext("Subject"),minWidth:80,cssClass:"email-content-cell",formatter:subjectFormatter},{id:"requester",field:"requester",name:gettext("Sent By"),minWidth:80,maxWidth:100,cssClass:"email-content-cell",formatter:unknownIfNullFormatter},{id:"sent_to",field:"sent_to",name:gettext("Sent To"),minWidth:80,maxWidth:100,cssClass:"email-content-cell",formatter:sentToFormatter},{id:"created",field:"created",name:gettext("Time Sent"),minWidth:80,cssClass:"email-content-cell",formatter:unknownIfNullFormatter},{id:"number_sent",field:"number_sent",name:gettext("Number Sent"),minwidth:100,maxWidth:150,cssClass:"email-content-cell",formatter:unknownIfNullFormatter}];tableData=emailData;$tablePlaceholder=$("<div/>",{class:"slickgrid"});$tableEmailsInner.append($tablePlaceholder);Slick.Grid($tablePlaceholder,tableData,columns,options);return $tableEmails.append($("<br/>"))};createEmailMessageViews=function($messagesWrapper,emails){var $closeButton,$created,$emailContent,$emailContentHeader,$emailHeader,$emailWrapper,$message,$messageContent,$requester,$sentTo,$subject,emailId,emailInfo,interpolateHeader,i,len;$messagesWrapper.empty();for(i=0,len=emails.length;i<len;i++){emailInfo=emails[i];if(!emailInfo.email){return}emailId=emailInfo.email.id;$messageContent=$("<section>",{"aria-hidden":"true",class:"modal email-modal",id:"email_message_"+emailId});$emailWrapper=$("<div>",{class:"inner-wrapper email-content-wrapper"});$emailHeader=$("<div>",{class:"email-content-header"});$emailHeader.append($("<input>",{type:"button",name:"copy-email-body-text",value:gettext("Copy Email To Editor"),id:"copy_email_"+emailId}));$closeButton=$("<a>",{href:"#",class:"close-modal"});$closeButton.append($("<i>",{class:"icon fa fa-times"}));$emailHeader.append($closeButton);interpolateHeader=function(title,value){return edx.HtmlUtils.setHtml($("<h2>",{class:"message-bold"}),edx.HtmlUtils.joinHtml(edx.HtmlUtils.HTML("<em>"),title,edx.HtmlUtils.HTML("</em>"),value))};$subject=interpolateHeader(gettext("Subject:"),emailInfo.email.subject);$requester=interpolateHeader(gettext("Sent By:"),emailInfo.requester);$created=interpolateHeader(gettext("Time Sent:"),emailInfo.created);$sentTo=interpolateHeader(gettext("Sent To:"),emailInfo.sent_to.join(", "));$emailHeader.append($subject);$emailHeader.append($requester);$emailHeader.append($created);$emailHeader.append($sentTo);$emailWrapper.append($emailHeader);$emailWrapper.append($("<hr>"));$emailContent=$("<div>",{class:"email-content-message"});$emailContentHeader=edx.HtmlUtils.setHtml($("<h2>",{class:"message-bold"}),edx.HtmlUtils.joinHtml(edx.HtmlUtils.HTML("<em>"),gettext("Message:"),edx.HtmlUtils.HTML("</em>")));$emailContent.append($emailContentHeader);$message=edx.HtmlUtils.setHtml($("<div>"),edx.HtmlUtils.HTML(emailInfo.email.html_message));$emailContent.append($message);$emailWrapper.append($emailContent);$messageContent.append($emailWrapper);$messagesWrapper.append($messageContent);$("#email_message_"+emailInfo.email.id+"_trig").leanModal({closeButton:".close-modal",copyEmailButton:"#copy_email_"+emailId});setupCopyEmailButton(emailId,emailInfo.email.html_message,emailInfo.email.subject)}};setupCopyEmailButton=function(emailId,htmlMessage,subject){return $("#copy_email_"+emailId).click(function(){var editor;editor=tinyMCE.get("mce_0");editor.setContent(htmlMessage);return $("#id_subject").val(subject)})};IntervalManager=function(){function intervalManager(ms,fn){this.ms=ms;this.fn=fn;this.intervalID=null}intervalManager.prototype.start=function(){this.fn();if(this.intervalID===null){this.intervalID=setInterval(this.fn,this.ms);return this.intervalID}return this.intervalID};intervalManager.prototype.stop=function(){clearInterval(this.intervalID);this.intervalID=null;return this.intervalID};return intervalManager}();this.PendingInstructorTasks=function(){function PendingInstructorTasks($section){var TASK_LIST_POLL_INTERVAL,ths=this;this.$section=$section;this.reload_running_tasks_list=function(){return PendingInstructorTasks.prototype.reload_running_tasks_list.apply(ths,arguments)};this.$running_tasks_section=findAndAssert(this.$section,".running-tasks-section");this.$table_running_tasks=findAndAssert(this.$section,".running-tasks-table");this.$no_tasks_message=findAndAssert(this.$section,".no-pending-tasks-message");if(this.$table_running_tasks.length){TASK_LIST_POLL_INTERVAL=2e4;this.reload_running_tasks_list();this.task_poller=new IntervalManager(TASK_LIST_POLL_INTERVAL,function(){return ths.reload_running_tasks_list()})}}PendingInstructorTasks.prototype.reload_running_tasks_list=function(){var listEndpoint,ths=this;listEndpoint=this.$table_running_tasks.data("endpoint");return $.ajax({type:"POST",dataType:"json",url:listEndpoint,success:function(data){if(data.tasks.length){createTaskListTable(ths.$table_running_tasks,data.tasks);ths.$no_tasks_message.hide();return ths.$running_tasks_section.show()}else{ths.$running_tasks_section.hide();ths.$no_tasks_message.empty();ths.$no_tasks_message.append($("<p>").text(gettext("No tasks currently running.")));return ths.$no_tasks_message.show()}}})};return PendingInstructorTasks}();KeywordValidator=function(){function keywordValidator(){}keywordValidator.keyword_regex=/%%+[^%]+%%/g;keywordValidator.keywords=["%%USER_ID%%","%%USER_FULLNAME%%","%%COURSE_DISPLAY_NAME%%","%%COURSE_END_DATE%%"];keywordValidator.validate_string=function(string){var foundKeyword,foundKeywords,invalidKeywords,isValid,keywords,regexMatch,validation,i,len;regexMatch=string.match(KeywordValidator.keyword_regex);foundKeywords=regexMatch===null?[]:regexMatch;invalidKeywords=[];isValid=true;keywords=KeywordValidator.keywords;validation=function(foundkeyword){if(anyOf.call(keywords,foundkeyword)<0){return invalidKeywords.push(foundkeyword)}else{return invalidKeywords}};for(i=0,len=foundKeywords.length;i<len;i++){foundKeyword=foundKeywords[i];validation(foundKeyword)}if(invalidKeywords.length!==0){isValid=false}return{isValid:isValid,invalidKeywords:invalidKeywords}};return keywordValidator}.call(this);this.ReportDownloads=function(){function ReportDownloads($section){var POLL_INTERVAL,reportdownloads=this;this.$section=$section;this.$report_downloads_table=this.$section.find(".report-downloads-table");POLL_INTERVAL=2e4;this.downloads_poller=new InstructorDashboard.util.IntervalManager(POLL_INTERVAL,function(){return reportdownloads.reload_report_downloads()})}ReportDownloads.prototype.reload_report_downloads=function(){var endpoint,ths=this;endpoint=this.$report_downloads_table.data("endpoint");return $.ajax({type:"POST",dataType:"json",url:endpoint,success:function(data){if(data.downloads.length){return ths.create_report_downloads_table(data.downloads)}else{return false}}})};ReportDownloads.prototype.create_report_downloads_table=function(reportDownloadsData){var $tablePlaceholder,columns,grid,options;this.$report_downloads_table.empty();options={enableCellNavigation:true,enableColumnReorder:false,rowHeight:30,forceFitColumns:true};columns=[{id:"link",field:"link",name:gettext("File Name"),toolTip:gettext("Links are generated on demand and expire within 5 minutes due to the sensitive nature of student information."),sortable:false,minWidth:150,cssClass:"file-download-link",formatter:function(row,cell,value,columnDef,dataContext){return edx.HtmlUtils.joinHtml(edx.HtmlUtils.HTML('<a target="_blank" href="'),dataContext.url,edx.HtmlUtils.HTML('">'),dataContext.name,edx.HtmlUtils.HTML("</a>"))}}];$tablePlaceholder=$("<div/>",{class:"slickgrid"});this.$report_downloads_table.append($tablePlaceholder);grid=new Slick.Grid($tablePlaceholder,reportDownloadsData,columns,options);grid.onClick.subscribe(function(event){var reportUrl;reportUrl=event.target.href;if(reportUrl){return Logger.log("edx.instructor.report.downloaded",{report_url:reportUrl})}return Logger.log("edx.instructor.report.downloaded",{report_url:reportUrl})});return grid.autosizeColumns()};return ReportDownloads}();if(typeof _!=="undefined"&&_!==null){_.defaults(window,{InstructorDashboard:{}});window.InstructorDashboard.util={plantTimeout:plantTimeout,plantInterval:plantInterval,statusAjaxError:this.statusAjaxError,IntervalManager:IntervalManager,createTaskListTable:createTaskListTable,createEmailContentTable:createEmailContentTable,createEmailMessageViews:createEmailMessageViews,PendingInstructorTasks:PendingInstructorTasks,KeywordValidator:KeywordValidator,ReportDownloads:this.ReportDownloads}}}).call(this);
