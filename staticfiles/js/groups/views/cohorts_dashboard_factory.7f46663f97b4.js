(function(t){"use strict";RequireJS.define("js/groups/models/cohort",["backbone"],function(t){var e=t.Model.extend({idAttribute:"id",defaults:{name:"",user_count:0,assignment_type:"",user_partition_id:null,group_id:null}});return e})}).call(this,define||RequireJS.define),function(t){"use strict";RequireJS.define("js/groups/models/verified_track_settings",["backbone"],function(t){var e=t.Model.extend({defaults:{enabled:!1,verified_cohort_name:""}});return e})}.call(this,define||RequireJS.define),function(t){var e=t.Model.extend({defaults:{type:"confirmation",title:"",message:"",details:[],actionText:null,actionClass:"",actionIconClass:"",actionCallback:null}});this.NotificationModel=e}.call(this,Backbone),RequireJS.define("js/models/notification",function(){}),function(t,e,i){var o=t.View.extend({events:{"click .action-primary":"triggerCallback"},initialize:function(){this.template=i.template(e("#notification-tpl").text())},render:function(){return this.$el.html(this.template({type:this.model.get("type"),title:this.model.get("title"),message:this.model.get("message"),details:this.model.get("details"),actionText:this.model.get("actionText"),actionClass:this.model.get("actionClass"),actionIconClass:this.model.get("actionIconClass")})),this.$(".message").focus(),this},triggerCallback:function(t){t.preventDefault();var e=this.model.get("actionCallback");e&&e(this)}});this.NotificationView=o}.call(this,Backbone,$,_),RequireJS.define("js/views/notification",function(){}),function(t){"use strict";RequireJS.define("js/groups/views/cohort_form",["jquery","underscore","backbone","gettext","edx-ui-toolkit/js/utils/html-utils","js/models/notification","js/views/notification"],function(t,e,i,o,n){var r=i.View.extend({events:{"change .cohort-management-details-association-course input":"onRadioButtonChange"},initialize:function(e){this.template=n.template(t("#cohort-form-tpl").text()),this.contentGroups=e.contentGroups,this.context=e.context},showNotification:function(t,e){var i=new NotificationModel(t);this.removeNotification(),this.notification=new NotificationView({model:i}),e.before(this.notification.$el),this.notification.render()},removeNotification:function(){this.notification&&this.notification.remove()},render:function(){return n.setHtml(this.$el,this.template({cohort:this.model,isDefaultCohort:this.isDefault(this.model.get("name")),contentGroups:this.contentGroups,studioGroupConfigurationsUrl:this.context.studioGroupConfigurationsUrl,isCcxEnabled:this.context.isCcxEnabled})),this},isDefault:function(t){var i=this.model.collection;if(e.isUndefined(i))return!1;var o=i.where({assignment_type:"random"});return 1===o.length&&o[0].get("name")===t},onRadioButtonChange:function(e){var i=t(e.currentTarget),o="yes"===i.val();o||this.$(".input-cohort-group-association").val(null),this.$(".input-cohort-group-association").prop("disabled",!o)},hasAssociatedContentGroup:function(){return this.$(".radio-yes").prop("checked")},getSelectedContentGroup:function(){var t,i,o,n,r,s=this.$(".input-cohort-group-association").val();if(!this.hasAssociatedContentGroup()||e.isNull(s))return null;for(t=s.split(":"),i=parseInt(t[0]),o=parseInt(t[1]),n=0;n<this.contentGroups.length;n++)if(r=this.contentGroups[n],r.get("id")===i&&r.get("user_partition_id")===o)return r;return null},getUpdatedCohortName:function(){var t=this.$(".cohort-name").val();return t?t.trim():""},getAssignmentType:function(){return this.$('input[name="cohort-assignment-type"]:checked').val()},showMessage:function(t,e,i){this.showNotification({type:e||"confirmation",title:t,details:i},this.$(".form-fields"))},validate:function(t){var i;return i=[],t.name||i.push(o("You must specify a name for the cohort")),this.hasAssociatedContentGroup()&&null===t.group_id&&(e.isNull(this.$(".input-cohort-group-association").val())?i.push(o("You did not select a content group")):i.push(o("The selected content group does not exist"))),i},saveForm:function(){var i,n,r,s,a,c=this,l=this.model,h=t.Deferred(),d=!e.isUndefined(this.model.id);return a=function(t,e){c.showMessage(t,"error",e)},this.removeNotification(),n=this.getSelectedContentGroup(),r=this.getAssignmentType(),i={name:this.getUpdatedCohortName(),group_id:n?n.id:null,user_partition_id:n?n.get("user_partition_id"):null,assignment_type:r},s=this.validate(i),s.length>0?(a(o(d?"The cohort cannot be saved":"The cohort cannot be added"),s),h.reject()):l.save(i,{patch:d,wait:!0}).done(function(t){l.id=t.id,c.render(),h.resolve()}).fail(function(t){var e=null;try{var i=JSON.parse(t.responseText);e=i.error}catch(n){}e||(e=o("We've encountered an error. Refresh your browser and then try again.")),a(e),h.reject()}),h.promise()}});return r})}.call(this,define||RequireJS.define),function(t){var e=function(e,i,o,n){var r=1===o?e:i;return t.template(r,{interpolate:/\{(.+?)\}/g})(n)};this.interpolate_ntext=e;var i=function(e,i){return t.template(e,{interpolate:/\{(.+?)\}/g})(i)};this.interpolate_text=i}.call(this,_),RequireJS.define("string_utils",["underscore"],function(t){return function(){var e;return e||t.interpolate_text}}(this)),function(t){"use strict";RequireJS.define("js/groups/views/cohort_editor",["backbone","underscore","jquery","gettext","js/groups/views/cohort_form","string_utils","js/models/notification","js/views/notification"],function(t,e,i,o,n){var r=t.View.extend({events:{"click .wrapper-tabs .tab":"selectTab","click .tab-content-settings .action-save":"saveSettings","click .tab-content-settings .action-cancel":"cancelSettings","submit .cohort-management-group-add-form":"addStudents"},initialize:function(t){this.template=e.template(i("#cohort-editor-tpl").text()),this.groupHeaderTemplate=e.template(i("#cohort-group-header-tpl").text()),this.cohorts=t.cohorts,this.contentGroups=t.contentGroups,this.context=t.context},errorNotifications:null,confirmationNotifications:null,preassignedNotifications:null,render:function(){return this.$el.html(this.template({cohort:this.model})),this.renderGroupHeader(),this.cohortFormView=new n({model:this.model,contentGroups:this.contentGroups,context:this.context}),this.cohortFormView.render(),this.$(".tab-content-settings").append(this.cohortFormView.$el),this},renderGroupHeader:function(){this.$(".cohort-management-group-header").html(this.groupHeaderTemplate({cohort:this.model}))},selectTab:function(t){var e=i(t.currentTarget),n=e.data("tab");t.preventDefault(),this.$(".wrapper-tabs .tab").removeClass("is-selected"),this.$(".wrapper-tabs .tab").find("span.sr").remove(),e.addClass("is-selected"),edx.HtmlUtils.prepend(i(e.find("a")),edx.HtmlUtils.interpolateHtml('<span class="sr"> {selectedTab} </span>',{selectedTab:o("Selected tab")})),this.$(".tab-content").addClass("is-hidden"),this.$(".tab-content-"+n).removeClass("is-hidden").focus()},saveSettings:function(t){var e=this.cohortFormView,i=this;t.preventDefault(),e.saveForm().done(function(){i.renderGroupHeader(),e.showMessage(o("Saved cohort"))})},cancelSettings:function(t){t.preventDefault(),this.render()},setCohort:function(t){this.model=t,this.render()},addStudents:function(t){t.preventDefault();var e=this,n=this.cohorts,r=this.$(".cohort-management-group-add-students"),s=this.model.url()+"/add",a=r.val().trim(),c=this.model.id;a.length>0?i.post(s,{users:a}).done(function(t){e.refreshCohorts().done(function(){var i=n.get(c);e.setCohort(i),e.addNotifications(t),t.unknown.length>0&&e.$(".cohort-management-group-add-students").val(a)})}).fail(function(){e.showErrorMessage(o("Error adding learners."),!0)}):(e.showErrorMessage(o("Enter a username or email."),!0),r.val(""))},refreshCohorts:function(){return this.cohorts.fetch()},undelegateViewEvents:function(t){t&&t.undelegateEvents()},showErrorMessage:function(t,e,i){e&&this.confirmationNotifications&&(this.undelegateViewEvents(this.confirmationNotifications),this.confirmationNotifications.$el.html(""),this.confirmationNotifications=null),void 0===i&&(i=new NotificationModel),i.set("type","error"),i.set("title",t),this.undelegateViewEvents(this.errorNotifications),this.errorNotifications=new NotificationView({el:this.$(".cohort-errors"),model:i}),this.errorNotifications.render()},addNotifications:function(t){var i,n,r,s,a,c,l,h,d,u,f,m=5;if(this.undelegateViewEvents(this.confirmationNotifications),a=t.added.length+t.changed.length,s=t.present.length,c=t.preassigned.length,n="",a>0||s>0){n+=interpolate_text(ngettext("{numUsersAdded} learner has been added to this cohort. ","{numUsersAdded} learners have been added to this cohort. ",a),{numUsersAdded:a});var p={};e.each(t.changed,function(t){i=t.previous_cohort,i in p?p[i]=p[i]+1:p[i]=1}),r=[],e.each(p,function(t,e){r.push(interpolate_text(ngettext("{numMoved} learner was moved from {prevCohort}","{numMoved} learners were moved from {prevCohort}",t),{numMoved:t,prevCohort:e}))}),s>0&&r.push(interpolate_text(ngettext("{numPresent} learner was already in the cohort","{numPresent} learners were already in the cohort",s),{numPresent:s})),this.confirmationNotifications=new NotificationView({el:this.$(".cohort-confirmations"),model:new NotificationModel({type:"confirmation",title:n,details:r})}),this.confirmationNotifications.render()}else this.confirmationNotifications&&(this.confirmationNotifications.$el.html(""),this.confirmationNotifications=null);if(this.undelegateViewEvents(this.preassignedNotifications),c>0){for(r=[],f=0;f<t.preassigned.length;f++)r.push(interpolate_text(o("{email}"),{email:t.preassigned[f]}));n=interpolate_text(ngettext("{numPreassigned} learner was pre-assigned for this cohort. This learner will automatically be added to the cohort when they enroll in the course.","{numPreassigned} learners were pre-assigned for this cohort. These learners will automatically be added to the cohort when they enroll in the course.",c),{numPreassigned:c}),this.preassignedNotifications=new NotificationView({el:this.$(".cohort-preassigned"),model:new NotificationModel({type:"warning",title:n,details:r})}),this.preassignedNotifications.render()}else this.preassignedNotifications&&(this.preassignedNotifications.$el.html(""),this.preassignedNotifications=null);this.undelegateViewEvents(this.errorNotifications),l=t.unknown.length+t.invalid.length,l>0?(h=function(t,e,i){var n=i?t.length:Math.min(m,t.length),s=i?e.length:Math.min(m-t.length,e.length);for(r=[],f=0;n>f;f++)r.push(interpolate_text(o("Unknown username: {user}"),{user:t[f]}));for(f=0;s>f;f++)r.push(interpolate_text(o("Invalid email address: {email}"),{email:e[f]}));return r},n=interpolate_text(ngettext("There was an error when trying to add learners:","{numErrors} learners could not be added to this cohort:",l),{numErrors:l}),r=h(t.unknown,t.invalid,!1),d=function(e){e.model.set("actionText",null),e.model.set("details",h(t.unknown,t.invalid,!0)),e.render()},u=new NotificationModel({details:r,actionText:l>m?o("View all errors"):null,actionCallback:d,actionClass:"action-expand"}),this.showErrorMessage(n,!1,u)):this.errorNotifications&&(this.errorNotifications.$el.html(""),this.errorNotifications=null)}});return r})}.call(this,define||RequireJS.define),function(t){"use strict";RequireJS.define("js/groups/views/course_cohort_settings_notification",["jquery","underscore","backbone","gettext"],function(t,e,i,o){var n=i.View.extend({initialize:function(i){this.template=e.template(t("#cohort-state-tpl").text()),this.cohortEnabled=i.cohortEnabled},render:function(){return this.$el.html(this.template({})),this.showCohortStateMessage(),this},showCohortStateMessage:function(){var t=this.$(".action-toggle-message");AnimationUtil.triggerAnimation(t),this.cohortEnabled?t.text(o("Cohorts Enabled")):t.text(o("Cohorts Disabled"))}});return n})}.call(this,define||RequireJS.define),function(t){"use strict";RequireJS.define("js/groups/views/verified_track_settings_notification",["jquery","underscore","backbone","gettext","edx-ui-toolkit/js/utils/string-utils","js/models/notification","js/views/notification"],function(t,e,i,o,n){var r=i.View.extend({render:function(){return this},validateSettings:function(e,i,r){if(this.model.get("enabled")){var s=this.model.get("verified_cohort_name");if(e){var a=!1;t.each(i,function(t,e){"manual"===e.get("assignment_type")&&e.get("name")===s?(a=!0,e.disableEditingName=!0):e.disableEditingName=!1}),a?this.showNotification({type:"confirmation",title:n.interpolate(o("This course uses automatic cohorting for verified track learners. You cannot disable cohorts, and you cannot rename the manual cohort named '{verifiedCohortName}'. To change the configuration for verified track cohorts, contact your edX partner manager."),{verifiedCohortName:s})}):this.showNotification({type:"error",title:n.interpolate(o("This course has automatic cohorting enabled for verified track learners, but the required cohort does not exist. You must create a manually-assigned cohort named '{verifiedCohortName}' for the feature to work."),{verifiedCohortName:s})}),r.prop("disabled",!0)}else this.showNotification({type:"error",title:o("This course has automatic cohorting enabled for verified track learners, but cohorts are disabled. You must enable cohorts for the feature to work.")}),r.prop("disabled",!1)}},showNotification:function(e){this.notification&&this.notification.remove(),this.notification=new NotificationView({model:new NotificationModel(e)}),t(".cohort-management").before(this.notification.$el),this.notification.render()}});return r})}.call(this,define||RequireJS.define),function(t){"use strict";RequireJS.define("js/views/base_dashboard_view",["jquery","backbone"],function(t,e){var i=e.View.extend({pubSub:t.extend({},e.Events)});return i})}.call(this,define||RequireJS.define),function(t,e,i,o,n,r,s){var a=t.View.extend({initialize:function(t){this.template=i.template(e("#file-upload-tpl").text()),this.options=t},render:function(){var t,e,i=this.options,n=function(t,e){var o=i[t];return o||e};return this.$el.html(this.template({title:n("title",""),inputLabel:n("inputLabel",""),inputTip:n("inputTip",""),extensions:n("extensions",""),submitButtonText:n("submitButtonText",o("Upload File")),url:n("url","")})),t=this.$el.find(".submit-file-button"),e=this.$el.find(".result"),this.$el.find("#file-upload-form").fileupload({dataType:"json",type:"POST",done:this.successHandler.bind(this),fail:this.errorHandler.bind(this),autoUpload:!1,replaceFileInput:!1,add:function(i,o){o.files[0];t.removeClass("is-disabled").attr("aria-disabled",!1),t.unbind("click"),t.click(function(t){t.preventDefault(),o.submit()}),e.html("")}}),this},successHandler:function(t,e){var i,a=e.files[0].name;i=this.options.successNotification?this.options.successNotification(a,t,e):new r({type:"confirmation",title:n(o("Your upload of '{file}' succeeded."),{file:a})});var c=new s({el:this.$(".result"),model:i});c.render()},errorHandler:function(t,e){var i,a=e.files[0].name,c=null,l=e.response().jqXHR;if(this.options.errorNotification)i=this.options.errorNotification(a,t,e);else{if(l.responseText)try{c=JSON.parse(l.responseText).error}catch(h){}c||(c=n(o("Your upload of '{file}' failed."),{file:a})),i=new r({type:"error",title:c})}var d=new s({el:this.$(".result"),model:i});d.render()}});this.FileUploaderView=a}.call(this,Backbone,$,_,gettext,interpolate_text,NotificationModel,NotificationView),RequireJS.define("js/views/file_uploader",function(){}),function(t){"use strict";RequireJS.define("js/groups/views/cohorts",["jquery","underscore","backbone","gettext","js/groups/models/cohort","js/groups/models/verified_track_settings","js/groups/views/cohort_editor","js/groups/views/cohort_form","js/groups/views/course_cohort_settings_notification","js/groups/views/verified_track_settings_notification","edx-ui-toolkit/js/utils/html-utils","js/views/base_dashboard_view","js/views/file_uploader","js/models/notification","js/views/notification","string_utils"],function(t,e,i,o,n,r,s,a,c,l,h,d){var u="hidden",f="is-disabled",m=".cohorts-state",p=d.extend({events:{"change .cohort-select":"onCohortSelected","change .cohorts-state":"onCohortsEnabledChanged","click .action-create":"showAddCohortForm","click .cohort-management-add-form .action-save":"saveAddCohortForm","click .cohort-management-add-form .action-cancel":"cancelAddCohortForm","click .link-cross-reference":"showSection","click .toggle-cohort-management-secondary":"showCsvUpload"},initialize:function(e){var i=this.model;this.template=h.template(t("#cohorts-tpl").text()),this.selectorTemplate=h.template(t("#cohort-selector-tpl").text()),this.context=e.context,this.contentGroups=e.contentGroups,this.cohortSettings=e.cohortSettings,i.on("sync",this.onSync,this),t(this.getSectionCss("cohort_management")).click(function(){i.fetch()})},render:function(){if(h.setHtml(this.$el,this.template({cohorts:this.model.models,cohortsEnabled:this.cohortSettings.get("is_cohorted")})),this.onSync(),!this.verifiedTrackSettingsNotificationView){var t=new r;t.url=this.context.verifiedTrackCohortingUrl,t.fetch({success:e.bind(this.renderVerifiedTrackSettingsNotificationView,this)}),this.verifiedTrackSettingsNotificationView=new l({model:t})}return this},renderSelector:function(t){h.setHtml(this.$(".cohort-select"),this.selectorTemplate({cohorts:this.model.models,selectedCohort:t}))},renderCourseCohortSettingsNotificationView:function(){var e=new c({el:t(".cohort-state-message"),cohortEnabled:this.getCohortsEnabled()});e.render()},renderVerifiedTrackSettingsNotificationView:function(){this.verifiedTrackSettingsNotificationView&&this.verifiedTrackSettingsNotificationView.validateSettings(this.getCohortsEnabled(),this.model.models,this.$(m))},onSync:function(t,e,i){var n,r=this.lastSelectedCohortId&&this.model.get(this.lastSelectedCohortId),s=this.model.length>0,a=this.$(".cohort-management-nav"),c=this.$(".wrapper-cohort-supplemental");n=function(){return i&&i.patch&&e.hasOwnProperty("user_partition_id")},this.hideAddCohortForm(),n()?this.renderSelector(r):s?(a.removeClass(u),c.removeClass(u),this.renderSelector(r),r&&this.showCohortEditor(r)):(a.addClass(u),c.addClass(u),this.showNotification({type:"warning",title:o("You currently have no cohorts configured"),actionText:o("Add Cohort"),actionClass:"action-create",actionIconClass:"fa-plus"})),this.renderVerifiedTrackSettingsNotificationView()},getSelectedCohort:function(){var t=this.$(".cohort-select").val();return t&&this.model.get(parseInt(t))},onCohortSelected:function(t){t.preventDefault();var e=this.getSelectedCohort();this.lastSelectedCohortId=e.get("id"),this.showCohortEditor(e)},onCohortsEnabledChanged:function(t){t.preventDefault(),this.saveCohortSettings()},saveCohortSettings:function(){var t,e=this,i={is_cohorted:this.getCohortsEnabled()};t=this.cohortSettings,t.save(i,{patch:!0,wait:!0}).done(function(){e.render(),e.renderCourseCohortSettingsNotificationView(),e.pubSub.trigger("cohorts:state",i)}).fail(function(t){e.showNotification({type:"error",title:o("We've encountered an error. Refresh your browser and then try again.")},e.$(".cohorts-state-section"))})},getCohortsEnabled:function(){return this.$(m).prop("checked")},showCohortEditor:function(e){this.removeNotification(),this.editor?(this.editor.setCohort(e),t(".cohort-management-group .group-header-title").focus()):(this.editor=new s({el:this.$(".cohort-management-group"),model:e,cohorts:this.model,contentGroups:this.contentGroups,context:this.context}),this.editor.render(),t(".cohort-management-group .group-header-title").focus())},showNotification:function(t,e){var i=new NotificationModel(t);this.removeNotification(),this.notification=new NotificationView({model:i}),e||(e=this.$(".cohort-management-group")),e.before(this.notification.$el),this.notification.render()},removeNotification:function(){this.notification&&this.notification.remove(),this.cohortFormView&&this.cohortFormView.removeNotification()},showAddCohortForm:function(t){var e;t.preventDefault(),this.removeNotification(),e=new n,e.url=this.model.url,this.cohortFormView=new a({model:e,contentGroups:this.contentGroups,context:this.context}),this.cohortFormView.render(),this.$(".cohort-management-add-form").append(this.cohortFormView.$el),this.cohortFormView.$(".cohort-name").focus(),this.setCohortEditorVisibility(!1)},hideAddCohortForm:function(){this.setCohortEditorVisibility(!0),this.cohortFormView&&(this.cohortFormView.remove(),this.cohortFormView=null)},setCohortEditorVisibility:function(t){t?(this.$(".cohorts-state-section").removeClass(f).attr("aria-disabled",!1),this.$(".cohort-management-group").removeClass(u),this.$(".cohort-management-nav").removeClass(f).attr("aria-disabled",!1)):(this.$(".cohorts-state-section").addClass(f).attr("aria-disabled",!0),this.$(".cohort-management-group").addClass(u),this.$(".cohort-management-nav").addClass(f).attr("aria-disabled",!0))},saveAddCohortForm:function(t){var e=this,i=this.cohortFormView.model;t.preventDefault(),this.removeNotification(),this.cohortFormView.saveForm().done(function(){e.lastSelectedCohortId=i.id,e.model.fetch().done(function(){e.showNotification({type:"confirmation",title:interpolate_text(o("The {cohortGroupName} cohort has been created. You can manually add students to this cohort below."),{cohortGroupName:i.get("name")})})})})},cancelAddCohortForm:function(t){t.preventDefault(),this.removeNotification(),this.onSync()},showSection:function(e){e.preventDefault();var i=t(e.currentTarget).data("section");t(this.getSectionCss(i)).click(),t(window).scrollTop(0)},showCsvUpload:function(e){e.preventDefault(),t(e.currentTarget).addClass(u);var i=this.$(".csv-upload").removeClass(u);this.fileUploaderView||(this.fileUploaderView=new FileUploaderView({el:i,title:o("Assign students to cohorts by uploading a CSV file."),inputLabel:o("Choose a .csv file"),inputTip:o("Only properly formatted .csv files will be accepted."),submitButtonText:o("Upload File and Assign Students"),extensions:".csv",url:this.context.uploadCohortsCsvUrl,successNotification:function(t,e,i){var n=interpolate_text(o("Your file '{file}' has been uploaded. Allow a few minutes for processing."),{file:t});return new NotificationModel({type:"confirmation",title:n})}}).render())},getSectionCss:function(t){return".instructor-nav .nav-item [data-section='"+t+"']"}});return p})}.call(this,define||RequireJS.define),function(t){"use strict";RequireJS.define("js/groups/collections/cohort",["backbone","js/groups/models/cohort"],function(t,e){var i=t.Collection.extend({model:e,comparator:"name",parse:function(t){return t.cohorts}});return i})}.call(this,define||RequireJS.define),function(t){"use strict";RequireJS.define("js/groups/models/course_cohort_settings",["backbone"],function(t){var e=t.Model.extend({idAttribute:"id",defaults:{is_cohorted:!1}});return e})}.call(this,define||RequireJS.define),function(t){"use strict";RequireJS.define("js/groups/models/content_group",["backbone"],function(t){var e=t.Model.extend({idAttribute:"id",defaults:{name:"",user_partition_id:null}});return e})}.call(this,define||RequireJS.define),function(t,e){"use strict";RequireJS.define("js/groups/views/cohorts_dashboard_factory",["jquery","js/groups/views/cohorts","js/groups/collections/cohort","js/groups/models/course_cohort_settings","js/groups/models/content_group"],function(t,e,i,o,n){return function(r,s){var a=t.map(r,function(t){return new n({id:t.id,name:t.name,user_partition_id:t.user_partition_id})}),c=new i,l=new o,h=t(".cohort-management");c.url=h.data("cohorts_url"),l.url=h.data("course_cohort_settings_url");var d=new e({el:h,model:c,contentGroups:a,cohortSettings:l,context:{uploadCohortsCsvUrl:h.data("upload_cohorts_csv_url"),verifiedTrackCohortingUrl:h.data("verified_track_cohorting_url"),studioGroupConfigurationsUrl:s,isCcxEnabled:h.data("is_ccx_enabled")}});c.fetch().done(function(){l.fetch().done(function(){d.render()})})}})}.call(this,define||RequireJS.define);