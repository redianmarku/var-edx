(function(e){"use strict";RequireJS.define("support/js/models/certificate",["backbone"],function(e){return e.Model.extend({defaults:{username:null,course_key:null,type:null,status:null,download_url:null,grade:null,created:null,modified:null}})})}).call(this,define||RequireJS.define),function(e){"use strict";RequireJS.define("support/js/collections/certificate",["backbone","support/js/models/certificate"],function(e,t){return e.Collection.extend({model:t,initialize:function(e){this.userFilter=e.userFilter||"",this.courseFilter=e.courseFilter||""},setUserFilter:function(e){this.userFilter=e},setCourseFilter:function(e){this.courseFilter=e},url:function(){var e="/certificates/search?user="+this.userFilter;return this.courseFilter&&(e+="&course_id="+this.courseFilter),e}})})}.call(this,define||RequireJS.define),RequireJS.define("text",{load:function(e){throw new Error("Dynamic load not allowed: "+e)}}),RequireJS.define("text!support/templates/certificates.underscore",[],function(){return'\n<div class="certificates-search">\n    <form class="certificates-form">\n        <label class="sr" for="certificate-user-filter-input"><%- gettext("Search") %></label>\n        <input\n            id="certificate-user-filter-input"\n            type="text"\n            name="query"\n            value=""\n            placeholder="<%- gettext("username or email") %>">\n        </input>\n        <input\n            id="certificate-course-filter-input"\n            type="text"\n            name="query"\n            value=""\n            placeholder="<%- gettext("course id") %>">\n        </input>\n        <input type="submit" value="<%- gettext("Search") %>" class="btn-disable-on-submit"></input>\n    </form>\n</div>\n\n<div class="certificates-results">\n</div>\n'}),RequireJS.define("text!support/templates/certificates_results.underscore",[],function(){return'<% if (certificates.length === 0) { %>\n<p><%- gettext("No results") %></p>\n<% } else { %>\n<table>\n    <tr>\n        <th><%- gettext("Course Key") %></th>\n        <th><%- gettext("Type") %></th>\n        <th><%- gettext("Status") %></th>\n        <th><%- gettext("Download URL") %></th>\n        <th><%- gettext("Grade") %></th>\n        <th><%- gettext("Last Updated") %></th>\n        <th></th>\n    </tr>\n    <% for (var i = 0; i < certificates.length; i++) {\n        var cert = certificates.at(i);\n    %>\n    <tr>\n        <td><%- cert.get("course_key") %></td>\n        <td><%- cert.get("type") %></td>\n        <td><%- cert.get("status") %></td>\n        <td>\n            <% if (cert.get("download_url")) { %>\n                <a href="<%- cert.get("download_url") %>">Download</a>\n                <span class="sr"><%- gettext("Download the user\'s certificate") %></span>\n            <% } else { %>\n                <%- gettext("Not available") %>\n            <% } %>\n        </td>\n        <td><%- cert.get("grade") %></td>\n        <td><%- cert.get("modified") %></td>\n        <td>\n            <% if (cert.get("regenerate")) { %>\n            <button\n                class="btn-cert-regenerate btn-disable-on-submit"\n                data-username="<%- cert.get("username") %>"\n                data-course-key="<%- cert.get("course_key") %>"\n            ><%- gettext("Regenerate") %></button>\n            <span class="sr"><%- gettext("Regenerate the user\'s certificate") %></span>\n             <% } else { %>\n             <button\n                class="btn-cert-generate btn-disable-on-submit"\n                data-username="<%- cert.get("username") %>"\n                data-course-key="<%- cert.get("course_key") %>"\n            ><%- gettext("Generate") %></button>\n            <span class="sr"><%- gettext("Generate the user\'s certificate") %></span>\n            <% } %>\n        </td>\n    </tr>\n    <% } %>\n</table>\n<% } %>\n'}),function(e){"use strict";RequireJS.define("support/js/views/certificates",["backbone","underscore","gettext","support/js/collections/certificate","text!support/templates/certificates.underscore","text!support/templates/certificates_results.underscore"],function(e,t,r,i,s,n){return e.View.extend({events:{"submit .certificates-form":"search","click .btn-cert-regenerate":"regenerateCertificate","click .btn-cert-generate":"generateCertificate"},initialize:function(e){t.bindAll(this,"search","updateCertificates","regenerateCertificate","handleSearchError"),this.certificates=new i({}),this.initialFilter=e.userFilter||null,this.courseFilter=e.courseFilter||null},render:function(){return this.$el.html(t.template(s)),this.initialFilter&&(this.setUserFilter(this.initialFilter),this.setCourseFilter(this.courseFilter),this.triggerSearch()),this},renderResults:function(){var e={certificates:this.certificates};this.setResults(t.template(n)(e))},renderError:function(e){var t=e||r("An unexpected error occurred.  Please try again.");this.setResults(t)},search:function(e){var t="/support/certificates?user="+this.getUserFilter();this.getCourseFilter()&&(t+="&course_id="+this.getCourseFilter()),e.preventDefault(),window.history.pushState({},window.document.title,t),this.disableButtons(),this.certificates.setUserFilter(this.getUserFilter()),this.certificates.setCourseFilter(this.getCourseFilter()),this.certificates.fetch({success:this.updateCertificates,error:this.handleSearchError})},generateCertificate:function(e){var t=$(e.target);this.disableButtons(),$.ajax({url:"/certificates/generate",type:"POST",data:{username:t.data("username"),course_key:t.data("course-key")},context:this,success:function(){this.certificates.fetch({success:this.updateCertificates,error:this.handleSearchError})},error:this.handleGenerationsError})},regenerateCertificate:function(e){var t=$(e.target);this.disableButtons(),$.ajax({url:"/certificates/regenerate",type:"POST",data:{username:t.data("username"),course_key:t.data("course-key")},context:this,success:function(){this.certificates.fetch({success:this.updateCertificates,error:this.handleSearchError})},error:this.handleGenerationsError})},updateCertificates:function(){this.renderResults(),this.enableButtons()},handleSearchError:function(e,t){this.renderError(t.responseText),this.enableButtons()},handleGenerationsError:function(e){alert(e.responseText),this.enableButtons()},triggerSearch:function(){$(".certificates-form").submit()},getUserFilter:function(){return $(".certificates-form > #certificate-user-filter-input").val()},setUserFilter:function(e){$(".certificates-form > #certificate-user-filter-input").val(e)},getCourseFilter:function(){return $(".certificates-form > #certificate-course-filter-input").val()},setCourseFilter:function(e){$(".certificates-form > #certificate-course-filter-input").val(e)},setResults:function(e){$(".certificates-results",this.$el).html(e)},disableButtons:function(){$(".btn-disable-on-submit").addClass("is-disabled").attr("disabled",!0)},enableButtons:function(){$(".btn-disable-on-submit").removeClass("is-disabled").attr("disabled",!1)}})})}.call(this,define||RequireJS.define),function(e){"use strict";RequireJS.define("support/js/certificates_factory",["jquery","underscore","support/js/views/certificates"],function(e,t,r){return function(i){return i=t.extend(i,{el:e(".certificates-content")}),new r(i).render()}})}.call(this,define||RequireJS.define);